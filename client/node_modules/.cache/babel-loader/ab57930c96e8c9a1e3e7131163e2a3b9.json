{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ttige\\\\Desktop\\\\harsh\\\\client\\\\src\\\\components\\\\Paginate\\\\Paginate.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Paginate.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Paginate(_ref) {\n  _s();\n\n  let {\n    currentPage,\n    recipesPerPage,\n    allRecipes,\n    paginate\n  } = _ref;\n  const pageNumbers = [];\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n  const [pageNumberLimit] = useState(5);\n\n  const handleClick = event => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const renderPageNumbers = pageNumbers.map(number => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: number,\n        onClick: handleClick,\n        className: currentPage === number ? \"active\" : null,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this);\n    } else {\n      return null;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"btnPag\",\n    children: renderPageNumbers\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Paginate, \"qTOyP3mjpsyKObK3qu94RMSsLPM=\");\n\n_c = Paginate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["C:/Users/ttige/Desktop/harsh/client/src/components/Paginate/Paginate.jsx"],"names":["React","useState","Paginate","currentPage","recipesPerPage","allRecipes","paginate","pageNumbers","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","pageNumberLimit","handleClick","event","setcurrentPage","Number","target","id","i","Math","ceil","push","renderPageNumbers","map","number"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,QAAT,OAAyE;AAAA;;AAAA,MAAvD;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,cAAf;AAA+BC,IAAAA,UAA/B;AAA2CC,IAAAA;AAA3C,GAAuD;AACtF,QAAMC,WAAW,GAAG,EAApB;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,CAAD,CAA5D;AACA,QAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC,CAAD,CAA5D;AAEA,QAAM,CAACW,eAAD,IAAoBX,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMY,WAAW,GAAIC,KAAD,IAAW;AAC7BC,IAAAA,cAAc,CAACC,MAAM,CAACF,KAAK,CAACG,MAAN,CAAaC,EAAd,CAAP,CAAd;AACH,GAFC;;AAIA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUhB,UAAU,GAAGD,cAAvB,CAArB,EAA6De,CAAC,EAA9D,EAAkE;AAChEZ,IAAAA,WAAW,CAACe,IAAZ,CAAiBH,CAAjB;AACD;;AAED,QAAMI,iBAAiB,GAAGhB,WAAW,CAACiB,GAAZ,CAAiBC,MAAD,IAAY;AACpD,QAAIA,MAAM,GAAGjB,kBAAkB,GAAG,CAA9B,IAAmCiB,MAAM,GAAGf,kBAAhD,EAAoE;AAChE,0BACI;AAEI,QAAA,EAAE,EAAEe,MAFR;AAGI,QAAA,OAAO,EAAEZ,WAHb;AAII,QAAA,SAAS,EAAEV,WAAW,KAAKsB,MAAhB,GAAyB,QAAzB,GAAoC,IAJnD;AAAA,kBAMKA;AANL,SACSA,MADT;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAXD,MAWO;AACH,aAAO,IAAP;AACH;AACJ,GAf2B,CAA1B;AAkBA,sBACC;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cACIF;AADJ;AAAA;AAAA;AAAA;AAAA,UADD;AAKD;;GAtCuBrB,Q;;KAAAA,Q","sourcesContent":["import React from \"react\";\r\nimport \"./Paginate.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Paginate({ currentPage, recipesPerPage, allRecipes, paginate }) {\r\n  const pageNumbers = [];\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n  const [pageNumberLimit] = useState(5);\r\n\r\n  const handleClick = (event) => {\r\n    setcurrentPage(Number(event.target.id));\r\n};\r\n\r\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const renderPageNumbers = pageNumbers.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n        return (\r\n            <li\r\n                key={number}\r\n                id={number}\r\n                onClick={handleClick}\r\n                className={currentPage === number ? \"active\" : null}\r\n            >\r\n                {number}\r\n            </li>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n});\r\n\r\n\r\n  return (\r\n   <nav className=\"btnPag\">\r\n      {renderPageNumbers}\r\n    </nav>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}