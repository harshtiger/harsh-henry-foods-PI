{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ttige\\\\Desktop\\\\harsh\\\\client\\\\src\\\\components\\\\Paginate\\\\Paginate.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Paginate.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Paginate(_ref) {\n  _s();\n\n  let {\n    recipesPerPage,\n    allRecipes,\n    paginate\n  } = _ref;\n  const pageNumbers = [];\n  const [pageNumberLimit] = useState(5);\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleNextbtn = () => {\n    setCurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setCurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"btnPag\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePrevbtn,\n      disabled: currentPage === pageNumbers[0] ? true : false,\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }, this), pageNumbers && pageNumbers.map(number => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(number),\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextbtn,\n      disabled: currentPage === pageNumbers[pageNumbers.length - 1] ? true : false,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Paginate, \"JReom+sq84T0yua2G1/dvRR0ibw=\");\n\n_c = Paginate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["C:/Users/ttige/Desktop/harsh/client/src/components/Paginate/Paginate.jsx"],"names":["React","useState","useEffect","Paginate","recipesPerPage","allRecipes","paginate","pageNumbers","pageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","currentPage","setCurrentPage","handleNextbtn","handlePrevbtn","i","Math","ceil","push","map","number","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAIA,eAAe,SAASC,QAAT,OAA4D;AAAA;;AAAA,MAA1C;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,UAAlB;AAA8BC,IAAAA;AAA9B,GAA0C;AACzE,QAAMC,WAAW,GAAG,EAApB;AAEA,QAAM,CAACC,eAAD,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACQ,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,CAAD,CAA5D;AACA,QAAM,CAACU,kBAAD,EAAqBC,qBAArB,IAA8CX,QAAQ,CAAC,CAAD,CAA5D;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C;;AAGA,QAAMc,aAAa,GAAG,MAAM;AAC1BD,IAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;;AAEA,QAAIA,WAAW,GAAG,CAAd,GAAkBJ,kBAAtB,EAA0C;AACtCC,MAAAA,qBAAqB,CAACD,kBAAkB,GAAGD,eAAtB,CAArB;AACAI,MAAAA,qBAAqB,CAACD,kBAAkB,GAAGH,eAAtB,CAArB;AACH;AACJ,GAPC;;AASF,QAAMQ,aAAa,GAAG,MAAM;AAC1BF,IAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;;AAEA,QAAI,CAACA,WAAW,GAAG,CAAf,IAAoBL,eAApB,KAAwC,CAA5C,EAA+C;AAC3CE,MAAAA,qBAAqB,CAACD,kBAAkB,GAAGD,eAAtB,CAArB;AACAI,MAAAA,qBAAqB,CAACD,kBAAkB,GAAGH,eAAtB,CAArB;AACH;AACF,GAPD;;AAUE,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUd,UAAU,GAAGD,cAAvB,CAArB,EAA6Da,CAAC,EAA9D,EAAkE;AAChEV,IAAAA,WAAW,CAACa,IAAZ,CAAiBH,CAAjB;AACD;;AACD,sBACC;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AACO,MAAA,OAAO,EAAED,aADhB;AAEO,MAAA,QAAQ,EAAEH,WAAW,KAAKN,WAAW,CAAC,CAAD,CAA3B,GAAiC,IAAjC,GAAwC,KAFzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOIA,WAAW,IACVA,WAAW,CAACc,GAAZ,CAAiBC,MAAD,iBAEd;AAAA,6BAAE;AAAqB,QAAA,OAAO,EAAE,MAAMhB,QAAQ,CAACgB,MAAD,CAA5C;AAAA,kBACGA;AADH,SAAaA,MAAb;AAAA;AAAA;AAAA;AAAA;AAAF,qBAFF,CARL,eAeK;AACI,MAAA,OAAO,EAAEP,aADb;AAEK,MAAA,QAAQ,EAAEF,WAAW,KAAKN,WAAW,CAACA,WAAW,CAACgB,MAAZ,GAAqB,CAAtB,CAA3B,GAAsD,IAAtD,GAA6D,KAF5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfL;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAwBD;;GAvDuBpB,Q;;KAAAA,Q","sourcesContent":["import React from \"react\";\r\nimport \"./Paginate.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\nexport default function Paginate({ recipesPerPage, allRecipes, paginate }) {\r\n  const pageNumbers = [];\r\n\r\n  const [pageNumberLimit] = useState(5);\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n\r\n  const handleNextbtn = () => {\r\n    setCurrentPage(currentPage + 1);\r\n\r\n    if (currentPage + 1 > maxPageNumberLimit) {\r\n        setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n        setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n};\r\n\r\nconst handlePrevbtn = () => {\r\n  setCurrentPage(currentPage - 1);\r\n\r\n  if ((currentPage - 1) % pageNumberLimit === 0) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n  }\r\n};\r\n\r\n\r\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n   <nav className=\"btnPag\">\r\n     <button\r\n            onClick={handlePrevbtn}\r\n            disabled={currentPage === pageNumbers[0] ? true : false}\r\n          >\r\n            Prev\r\n          </button>\r\n      {pageNumbers &&\r\n        pageNumbers.map((number) => (\r\n\r\n          <><button key={number} onClick={() => paginate(number)}>\r\n              {number}\r\n            </button>\r\n            </>\r\n        ))} \r\n        <button\r\n            onClick={handleNextbtn}\r\n             disabled={currentPage === pageNumbers[pageNumbers.length - 1] ? true : false}\r\n          >\r\n          Next\r\n    </button>\r\n    </nav>\r\n  );\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}