{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ttige\\\\Desktop\\\\harsh\\\\client\\\\src\\\\components\\\\Paginate\\\\Paginate.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./Paginate.css\"; //action \n\nimport { setPagIndexes } from \"../../actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Paginate(_ref) {\n  _s();\n\n  let {\n    paginate,\n    handleNext,\n    handleSupNext,\n    handleSupPrev,\n    handlePrev,\n    maxPageDisplay,\n    minPageDisplay\n  } = _ref;\n  const dispatch = useDispatch();\n  const allRecipes = useSelector(state => state.recipes.length); // \n\n  const [currentPage\n  /*setCurrentPage*/\n  ] = useState(1);\n  const recipesPerPage = 9;\n  const indexOfLastRecipe = currentPage * recipesPerPage;\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\n  useEffect(() => dispatch(setPagIndexes(indexOfLastRecipe, indexOfFirstRecipe)), [indexOfLastRecipe, indexOfFirstRecipe, dispatch]);\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"btnPag\",\n    children: pageNumbers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSupPrev(currentPage),\n        children: \"<<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePrev(currentPage),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), pageNumbers.map(number => {\n        if (number <= maxPageDisplay && number >= minPageDisplay) {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            id: number,\n            onClick: () => paginate(number),\n            children: number\n          }, number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this);\n        } else {\n          return null;\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNext(currentPage),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSupNext(currentPage),\n        children: \">>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Paginate, \"fDYu+K5FmkzDu1NWe9La2cLSpNk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Paginate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["C:/Users/ttige/Desktop/harsh/client/src/components/Paginate/Paginate.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","setPagIndexes","Paginate","paginate","handleNext","handleSupNext","handleSupPrev","handlePrev","maxPageDisplay","minPageDisplay","dispatch","allRecipes","state","recipes","length","currentPage","recipesPerPage","indexOfLastRecipe","indexOfFirstRecipe","pageNumbers","i","Math","ceil","push","map","number"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAO,gBAAP,C,CAEA;;AACA,SAAQC,aAAR,QAA4B,qBAA5B;;AAIA,eAAe,SAASC,QAAT,OAAoH;AAAA;;AAAA,MAAlG;AAACC,IAAAA,QAAD;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA,aAAvB;AAAsCC,IAAAA,aAAtC;AAAqDC,IAAAA,UAArD;AAAiEC,IAAAA,cAAjE;AAAiFC,IAAAA;AAAjF,GAAkG;AAEnI,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,UAAU,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,MAAxB,CAA9B,CAHmI,CAKnI;;AAEA,QAAM,CAACC;AAAa;AAAd,MAAoClB,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAMmB,cAAc,GAAE,CAAtB;AAEA,QAAMC,iBAAiB,GAAGF,WAAW,GAAGC,cAAxC;AACA,QAAME,kBAAkB,GAAGD,iBAAiB,GAAGD,cAA/C;AAOElB,EAAAA,SAAS,CACP,MAAMY,QAAQ,CAACT,aAAa,CAACgB,iBAAD,EAAoBC,kBAApB,CAAd,CADP,EAEP,CAACD,iBAAD,EAAoBC,kBAApB,EAAwCR,QAAxC,CAFO,CAAT;AAMA,QAAMS,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUX,UAAU,GAAGK,cAAvB,CAArB,EAA6DI,CAAC,EAA9D,EAAkE;AAChED,IAAAA,WAAW,CAACI,IAAZ,CAAiBH,CAAjB;AACD;;AAYD,sBAGA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cACKD,WAAW,CAACL,MAAZ,KAAuB,CAAvB,gBACC;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,8BACE;AAAS,QAAA,OAAO,EAAE,MAAKR,aAAa,CAACS,WAAD,CAApC;AAAA,kBAAoD;AAApD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAKR,UAAU,CAACQ,WAAD,CAAhC;AAAA,kBAAgD;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGI,WAAW,CAACK,GAAZ,CAAgBC,MAAM,IAAI;AACzB,YAAIA,MAAM,IAAIjB,cAAV,IAA4BiB,MAAM,IAAIhB,cAA1C,EAA0D;AACxD,8BACE;AAEE,YAAA,EAAE,EAAEgB,MAFN;AAIE,YAAA,OAAO,EAAE,MAAMtB,QAAQ,CAACsB,MAAD,CAJzB;AAAA,sBAMGA;AANH,aACOA,MADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAXD,MAWO;AACL,iBAAO,IAAP;AACD;AACF,OAfA,CAHH,eAmBE;AAAQ,QAAA,OAAO,EAAE,MAAKrB,UAAU,CAACW,WAAD,CAAhC;AAAA,kBAAgD;AAAhD;AAAA;AAAA;AAAA;AAAA,cAnBF,eAoBE;AAAQ,QAAA,OAAO,EAAE,MAAKV,aAAa,CAACU,WAAD,CAAnC;AAAA,kBAAmD;AAAnD;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,UAHA;AAgCD;;GAvEuBb,Q;UAEPH,W,EACEC,W;;;KAHKE,Q","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport \"./Paginate.css\";\r\n\r\n//action \r\nimport {setPagIndexes} from \"../../actions/index\";\r\n\r\n\r\n\r\nexport default function Paginate({paginate, handleNext, handleSupNext, handleSupPrev, handlePrev, maxPageDisplay, minPageDisplay}) {\r\n\r\nconst dispatch = useDispatch();\r\nconst allRecipes = useSelector(state => state.recipes.length);\r\n\r\n// \r\n\r\nconst [currentPage, /*setCurrentPage*/] = useState(1);\r\nconst recipesPerPage= 9;\r\n\r\nconst indexOfLastRecipe = currentPage * recipesPerPage;   \r\nconst indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  useEffect(\r\n    () => dispatch(setPagIndexes(indexOfLastRecipe, indexOfFirstRecipe)),\r\n    [indexOfLastRecipe, indexOfFirstRecipe, dispatch]\r\n  );\r\n\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n  return (\r\n \r\n\r\n  <nav className=\"btnPag\">\r\n      {pageNumbers.length === 0 ? (\r\n        <p></p>\r\n      ) : (\r\n        <div>\r\n          <button  onClick={()=> handleSupPrev(currentPage)}>{\"<<\"}</button>\r\n          <button onClick={()=> handlePrev(currentPage)}>{\"<\"}</button>\r\n          {pageNumbers.map(number => {\r\n            if (number <= maxPageDisplay && number >= minPageDisplay) {\r\n              return (\r\n                <button\r\n                  key={number}\r\n                  id={number}\r\n                  \r\n                  onClick={() => paginate(number)}\r\n                >\r\n                  {number}\r\n                </button>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n          <button onClick={()=> handleNext(currentPage)}>{\">\"}</button>\r\n          <button onClick={()=> handleSupNext(currentPage)}>{\">>\"}</button>\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}