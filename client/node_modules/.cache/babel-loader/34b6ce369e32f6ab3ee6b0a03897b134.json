{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ttige\\\\Desktop\\\\harsh\\\\client\\\\src\\\\components\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRecipes, filterByDiet, getTypesOfDiet, orderByName, orderByScoreLikes, clearError\n/*setPagIndexes,\r\n/*  getNameRecipe*/\n} from \"../../actions\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"../Card/Card\";\nimport Paginates from \"../Paginate/Paginates\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport LoadingHome from \"../loading/LoadingHome\";\nimport Modal from \"../modal/Modal\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [,\n  /*refreshState*/\n  setRefreshState] = useState(false);\n  const dispatch = useDispatch();\n  const allRecipes = useSelector(state => state.recipes);\n  const diets = useSelector(state => state.diets);\n  const error = useSelector(state => state.error); //Paginado:\n\n  const [currentPage, setCurrentPage] = useState(1); // aca seteo la pagina inicial en 1\n\n  const [recipesPerPage, setRecipesPerPage] = useState(9); // le pido paginar 9  cards en cada page\n\n  const indexOfLastRecipe = currentPage * recipesPerPage;\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\n  const currentRecipes = allRecipes.slice(indexOfFirstRecipe, indexOfLastRecipe);\n  /* const pagesDisplayLimit = 5;\r\n  const [maxPageDisplay, setMaxPageDisplay] = useState(5); \r\n  const [minPageDisplay, setMinPageDisplay] = useState(1);\r\n  \n  \n  useEffect(\r\n   () => dispatch(setPagIndexes(indexOfLastRecipe, indexOfFirstRecipe)),\r\n   [indexOfLastRecipe, indexOfFirstRecipe, dispatch]\r\n  );\r\n  */\n\n  /*useEffect(() => {\r\n    setCurrentPage(1);\r\n    setMaxPageDisplay(5);\r\n    setMinPageDisplay(1);\r\n  }, [allRecipes]);*/\n\n  /*const pageNumber = [];\r\n    for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\r\n      pageNumber.push(i);\r\n    }*/\n\n  /*const handleNext = () => {\r\n    if (currentPage !== pageNumber.length) {\r\n      console.log(\"owo\")\r\n      setCurrentPage(currentPage + 1);\r\n      if (currentPage + 1 > maxPageDisplay) {\r\n        console.log(maxPageDisplay)\r\n        setMaxPageDisplay(maxPageDisplay + pagesDisplayLimit);\r\n        setMinPageDisplay(minPageDisplay + pagesDisplayLimit);\r\n      }\r\n      \r\n      \r\n    }\r\n  };*/\n\n  /*const handleSupNext = () => {\r\n    const lastPage = pageNumber.length;\r\n    if (currentPage !== lastPage) {\r\n      setCurrentPage(lastPage);\r\n      setMaxPageDisplay(lastPage);\r\n      setMinPageDisplay(lastPage - pagesDisplayLimit + 1);\r\n    }\r\n  };\r\n    const handleSupPrev = () => {\r\n    console.log(\"owo\")\r\n    \r\n    if (currentPage !== 1) {\r\n      setCurrentPage(1);\r\n      setMaxPageDisplay(5);\r\n      setMinPageDisplay(1);\r\n      \r\n    }\r\n  };\r\n    const handlePrev = () => {\r\n    console.log(\"owo\")\r\n    if (currentPage !== 1) {\r\n      setCurrentPage(currentPage - 1);\r\n      if (currentPage - 1 < minPageDisplay) {\r\n        setMaxPageDisplay(\r\n          maxPageDisplay - pagesDisplayLimit < 5 ? 5 : maxPageDisplay - pagesDisplayLimit\r\n        );\r\n        setMinPageDisplay(\r\n          minPageDisplay - pagesDisplayLimit <= 0 ? 1 : minPageDisplay - pagesDisplayLimit\r\n        );\r\n      }\r\n    }\r\n  };\r\n  \r\n    \r\n  const paginate = (pageNumber) => {   // esto setea el paginado\r\n    setCurrentPage(pageNumber);\r\n    };*/\n\n  const [\n    /*orderName*/\n  , setOrderName] = useState(\"\");\n  const [\n    /*orderLike*/\n  , setOrderLike] = useState(\"\");\n  const [\n    /*cambio*/\n  , setCambio] = useState(false);\n  useEffect(() => {\n    dispatch(getRecipes()); // trae todas las recetas\n\n    setCambio(true);\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getTypesOfDiet()); // trae los tipos  de  dieta\n  }, [dispatch]);\n\n  const clearErrors = () => {\n    dispatch(clearError());\n  };\n\n  function handleClick(e) {\n    // con este handle click me traigo todas las recetas\n    e.preventDefault();\n    dispatch(getRecipes());\n  }\n\n  function handleSelectTypeOfDiet(e) {\n    dispatch(filterByDiet(e.target.value));\n    setCurrentPage(1);\n    setRefreshState(prevState => !prevState);\n  }\n\n  function handleSelectByName(e) {\n    e.preventDefault();\n    dispatch(orderByName(e.target.value));\n    setCurrentPage(1);\n    setOrderName(\"Order\" + e.target.value);\n  }\n\n  function handleSelectByScore(e) {\n    e.preventDefault();\n    dispatch(orderByScoreLikes(e.target.value));\n    setCurrentPage(1);\n    setOrderLike(\"Order\" + e.target.value);\n  }\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  const setNext = () => {\n    setCurrentPage(currentPage + 5);\n  }; //\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"pick one for me!!!\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://i.ibb.co/WFBhFLb/Harsh-Stickers1.png\",\n        alt: \"Harsh-Stickers1\",\n        border: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paginates, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Modal, {\n      show: true,\n      setShow: clearErrors,\n      message: \"No results were found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/recipe\",\n      className: \"linkCreate\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btnCreate\",\n        children: \"Create your own recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showAll\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          handleClick(e);\n        },\n        children: \"Show all recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"span\",\n        children: \"Order by Recipe Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: n => handleSelectByName(n),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"A-Z\",\n          children: \"A-Z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Z-A\",\n          children: \"Z-A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"span\",\n        children: \"Order by Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: s => handleSelectByScore(s),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Asc\",\n          children: \"Highest Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Desc\",\n          children: \"Lowest Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"span\",\n        children: \"Filter by Type of diet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => handleSelectTypeOfDiet(e),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"All Diets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), diets.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: d.name,\n          children: d.name\n        }, d.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginate\",\n      children: /*#__PURE__*/_jsxDEV(Paginates, {\n        paginate: paginate,\n        setNext: setNext\n        /*handleNext={handleNext}\r\n        handleSupNext={handleSupNext}\r\n        handlePrev={handlePrev}\r\n        handleSupPrev={handleSupPrev}\r\n        maxPageDisplay = {maxPageDisplay}\r\n        minPageDisplay = {minPageDisplay}\r\n        currentPage = {currentPage}\r\n        recipesPerPage = {recipesPerPage}*/\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: allRecipes.length > 0 ? currentRecipes === null || currentRecipes === void 0 ? void 0 : currentRecipes.map(c => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home/\" + c.id,\n            className: \"linkCard\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: c.title,\n              image: c.image ? c.image : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://shorturl.ae/eEB8K\",\n                alt: \"Img not provided\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this),\n              diets: c.createdDb ? c.diets.map(d => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dietsMap\",\n                children: d.name\n              }, d.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 44\n              }, this)) : c.diets.map(d => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dietsMap\",\n                children: d\n              }, d, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 44\n              }, this)),\n              vegetarian: c.vegetarian === true ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dietsMap\",\n                children: \"vegetarian\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 22\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this),\n              score: c.aggregateLikes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(LoadingHome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginate\",\n      children: /*#__PURE__*/_jsxDEV(Paginates\n      /*paginate={paginate}\r\n      handleNext={handleNext}\r\n      handleSupNext={handleSupNext}\r\n      handlePrev={handlePrev}\r\n      handleSupPrev={handleSupPrev}\r\n      maxPageDisplay = {maxPageDisplay}\r\n      minPageDisplay = {minPageDisplay}\r\n      allRecipes = {allRecipes}\r\n      recipesPerPage={recipesPerPage}*/\n      , {\n        currentPage: currentPage,\n        setCurrentPage: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"1M3Um44eYwKqzP/9mGedaX6thXA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/ttige/Desktop/harsh/client/src/components/Home/Home.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getRecipes","filterByDiet","getTypesOfDiet","orderByName","orderByScoreLikes","clearError","Link","Card","Paginates","SearchBar","LoadingHome","Modal","Home","setRefreshState","dispatch","allRecipes","state","recipes","diets","error","currentPage","setCurrentPage","recipesPerPage","setRecipesPerPage","indexOfLastRecipe","indexOfFirstRecipe","currentRecipes","slice","setOrderName","setOrderLike","setCambio","clearErrors","handleClick","e","preventDefault","handleSelectTypeOfDiet","target","value","prevState","handleSelectByName","handleSelectByScore","paginate","pageNumber","setNext","n","s","map","d","name","id","length","c","title","image","createdDb","vegetarian","aggregateLikes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getRecipes,\r\n  filterByDiet,\r\n  getTypesOfDiet,\r\n  orderByName,\r\n  orderByScoreLikes,\r\n  clearError,\r\n /*setPagIndexes,\r\n /*  getNameRecipe*/\r\n} from \"../../actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../Card/Card\";\r\nimport Paginates from \"../Paginate/Paginates\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport LoadingHome from \"../loading/LoadingHome\"\r\nimport Modal from \"../modal/Modal\";\r\n\r\n\r\n\r\n\r\nimport \"./Home.css\";\r\n\r\n\r\n\r\n\r\nexport default function Home() {\r\n  const [, /*refreshState*/ setRefreshState] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const allRecipes = useSelector((state) => state.recipes);\r\n  const diets = useSelector((state) => state.diets);\r\n  const error = useSelector(state => state.error);\r\n\r\n\r\n\r\n\r\n  //Paginado:\r\n\r\n \r\n  const [currentPage, setCurrentPage] = useState(1);        // aca seteo la pagina inicial en 1\r\n  const [recipesPerPage, setRecipesPerPage] = useState(9);// le pido paginar 9  cards en cada page\r\n  const indexOfLastRecipe = currentPage * recipesPerPage;   \r\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\r\n  const currentRecipes = allRecipes.slice(\r\n    indexOfFirstRecipe,\r\n    indexOfLastRecipe\r\n  );\r\n\r\n /* const pagesDisplayLimit = 5;\r\nconst [maxPageDisplay, setMaxPageDisplay] = useState(5); \r\nconst [minPageDisplay, setMinPageDisplay] = useState(1);\r\n\r\n\r\nuseEffect(\r\n  () => dispatch(setPagIndexes(indexOfLastRecipe, indexOfFirstRecipe)),\r\n  [indexOfLastRecipe, indexOfFirstRecipe, dispatch]\r\n);\r\n*/\r\n\r\n/*useEffect(() => {\r\n  setCurrentPage(1);\r\n  setMaxPageDisplay(5);\r\n  setMinPageDisplay(1);\r\n}, [allRecipes]);*/\r\n\r\n\r\n\r\n\r\n\r\n/*const pageNumber = [];\r\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\r\n    pageNumber.push(i);\r\n  }*/\r\n\r\n\r\n  \r\n  /*const handleNext = () => {\r\n    if (currentPage !== pageNumber.length) {\r\n      console.log(\"owo\")\r\n      setCurrentPage(currentPage + 1);\r\n      if (currentPage + 1 > maxPageDisplay) {\r\n        console.log(maxPageDisplay)\r\n        setMaxPageDisplay(maxPageDisplay + pagesDisplayLimit);\r\n        setMinPageDisplay(minPageDisplay + pagesDisplayLimit);\r\n      }\r\n      \r\n      \r\n    }\r\n  };*/\r\n\r\n  /*const handleSupNext = () => {\r\n    const lastPage = pageNumber.length;\r\n    if (currentPage !== lastPage) {\r\n      setCurrentPage(lastPage);\r\n      setMaxPageDisplay(lastPage);\r\n      setMinPageDisplay(lastPage - pagesDisplayLimit + 1);\r\n    }\r\n  };\r\n\r\n  const handleSupPrev = () => {\r\n    console.log(\"owo\")\r\n    \r\n    if (currentPage !== 1) {\r\n      setCurrentPage(1);\r\n      setMaxPageDisplay(5);\r\n      setMinPageDisplay(1);\r\n      \r\n    }\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    console.log(\"owo\")\r\n    if (currentPage !== 1) {\r\n      setCurrentPage(currentPage - 1);\r\n      if (currentPage - 1 < minPageDisplay) {\r\n        setMaxPageDisplay(\r\n          maxPageDisplay - pagesDisplayLimit < 5 ? 5 : maxPageDisplay - pagesDisplayLimit\r\n        );\r\n        setMinPageDisplay(\r\n          minPageDisplay - pagesDisplayLimit <= 0 ? 1 : minPageDisplay - pagesDisplayLimit\r\n        );\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  \r\n  const paginate = (pageNumber) => {   // esto setea el paginado\r\n    setCurrentPage(pageNumber);\r\n    };*/\r\n\r\n\r\n\r\n\r\n const [/*orderName*/, setOrderName] = useState(\"\");\r\n const [/*orderLike*/, setOrderLike] = useState(\"\");\r\n const [/*cambio*/, setCambio] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getRecipes());  // trae todas las recetas\r\n    setCambio(true);\r\n    \r\n   \r\n    \r\n    \r\n  }, [dispatch]);\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getTypesOfDiet());  // trae los tipos  de  dieta\r\n  }, [dispatch]);\r\n\r\n  const clearErrors = () => {\r\n    dispatch(clearError());\r\n}\r\n\r\n  function handleClick(e) {    // con este handle click me traigo todas las recetas\r\n    e.preventDefault();\r\n    \r\n    dispatch(getRecipes());\r\n    \r\n  }\r\n\r\n\r\n  function handleSelectTypeOfDiet(e) {         \r\n    dispatch(filterByDiet(e.target.value));\r\n    \r\n    setCurrentPage(1)\r\n\r\n    setRefreshState((prevState) => !prevState);\r\n    \r\n  }\r\n\r\n  function handleSelectByName(e) {\r\n    e.preventDefault();\r\n    dispatch(orderByName(e.target.value));\r\n    setCurrentPage(1);\r\n    setOrderName(\"Order\" + e.target.value);\r\n  }\r\n\r\n\r\n  function handleSelectByScore(e) {\r\n    e.preventDefault();\r\n    dispatch(orderByScoreLikes(e.target.value));\r\n    setCurrentPage(1);\r\n    setOrderLike(\"Order\" + e.target.value);\r\n  }\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const setNext = () => {\r\n    setCurrentPage(currentPage + 5)\r\n  }\r\n\r\n  //\r\n\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>pick one for me!!!<img src=\"https://i.ibb.co/WFBhFLb/Harsh-Stickers1.png\" alt=\"Harsh-Stickers1\" border=\"0\" /></h1>\r\n      <SearchBar />\r\n      <Paginates />\r\n      {error && <Modal show={true} setShow={clearErrors} message={\"No results were found\"} />}\r\n      \r\n      <Link to=\"/recipe\" className=\"linkCreate\">\r\n        <button className=\"btnCreate\">Create your own recipe</button>\r\n      </Link>\r\n      <div className=\"showAll\">\r\n        <button\r\n          onClick={(e) => {\r\n            handleClick(e);\r\n          }}\r\n        >\r\n          Show all recipes\r\n          \r\n\r\n          \r\n        </button>\r\n      </div>\r\n\r\n   \r\n      <div className=\"select\">\r\n\r\n\r\n        <span className=\"span\">Order by Recipe Name</span>\r\n        <select onChange={(n) => handleSelectByName(n)}>\r\n          <option value=\"default\">All</option>\r\n          <option value=\"A-Z\">A-Z</option>\r\n          <option value=\"Z-A\">Z-A</option>\r\n        </select>\r\n\r\n\r\n        <span className=\"span\">Order by Score</span>\r\n        <select onChange={(s) => handleSelectByScore(s)}>\r\n          <option value=\"All\">All</option>\r\n          <option value=\"Asc\">Highest Score</option>\r\n          <option value=\"Desc\">Lowest Score</option>\r\n        </select>\r\n\r\n\r\n        <span className=\"span\">Filter by Type of diet</span>\r\n        <select onChange={(e) => handleSelectTypeOfDiet(e)}>\r\n          <option value=\"default\">All Diets</option>\r\n\r\n          {diets.map((d) => (\r\n            <option value={d.name} key={d.id}>\r\n              {d.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        </div>\r\n\r\n\r\n\r\n      <div className=\"paginate\">\r\n        <Paginates\r\n        paginate={paginate}\r\n        setNext={setNext}\r\n        /*handleNext={handleNext}\r\n        handleSupNext={handleSupNext}\r\n        handlePrev={handlePrev}\r\n        handleSupPrev={handleSupPrev}\r\n        maxPageDisplay = {maxPageDisplay}\r\n        minPageDisplay = {minPageDisplay}\r\n        currentPage = {currentPage}\r\n        recipesPerPage = {recipesPerPage}*/\r\n        \r\n       \r\n        \r\n      \r\n        \r\n\r\n        \r\n        /> \r\n      </div>\r\n      \r\n\r\n      \r\n\r\n\r\n\r\n      <div className=\"cards\">\r\n       \r\n      {allRecipes.length>0? currentRecipes?.map((c) => {\r\n         \r\n        return  (\r\n          <div key={c.id}>\r\n             \r\n            <Link to={\"/home/\" + c.id} className=\"linkCard\">\r\n             \r\n              <Card\r\n               \r\n                title={c.title}\r\n\r\n\r\n                image={\r\n                  c.image \r\n                  ?(c.image) \r\n                  :(<img src=\"https://shorturl.ae/eEB8K\" alt=\"Img not provided\"/>)                  \r\n                 }   \r\n\r\n\r\n                diets={\r\n                  c.createdDb\r\n                    ? c.diets.map((d) => ( <p key={d.name} className=\"dietsMap\">{d.name}</p>))\r\n                    : c.diets.map((d) => ( <p key={d} className=\"dietsMap\">{d}</p>))\r\n                     }\r\n\r\n                vegetarian={\r\n                  c.vegetarian === true \r\n                  ? (<p className=\"dietsMap\">vegetarian</p>) \r\n                  :(<p></p>)\r\n                  }\r\n\r\n\r\n                score={c.aggregateLikes}\r\n\r\n\r\n              />\r\n              \r\n            </Link>\r\n            \r\n          </div>)})    : <LoadingHome/>}  \r\n          \r\n        </div> \r\n      \r\n      \r\n\r\n\r\n\r\n\r\n\r\n      <div className=\"paginate\">\r\n      <Paginates\r\n        /*paginate={paginate}\r\n        handleNext={handleNext}\r\n        handleSupNext={handleSupNext}\r\n        handlePrev={handlePrev}\r\n        handleSupPrev={handleSupPrev}\r\n        maxPageDisplay = {maxPageDisplay}\r\n        minPageDisplay = {minPageDisplay}\r\n        allRecipes = {allRecipes}\r\n        recipesPerPage={recipesPerPage}*/\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n\r\n        \r\n        />  \r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}