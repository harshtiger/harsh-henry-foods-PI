{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ttige\\\\Desktop\\\\harsh\\\\client\\\\src\\\\components\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRecipes, filterByDiet, getTypesOfDiet, orderByName, orderByScoreLikes, clearError } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"../Card/Card\"; //import Paginate from \"../Paginate/Paginate\";\n\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport LoadingHome from \"../loading/LoadingHome\";\nimport Modal from \"../modal/Modal\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaginateComponent(_ref) {\n  _s();\n\n  let {\n    allRecipes,\n    getRecipes\n  } = _ref;\n\n  function getRecipesFunction() {\n    getRecipes();\n  }\n\n  useEffect(() => {\n    getRecipesFunction();\n  }, []);\n  const [render, setRender] = useState(allRecipes);\n  const [currentPage, setCurrentPage] = useState(1); // aca seteo la pagina inicial en 1\n\n  const [recipesPerPage\n  /*setRecipesPerPage*/\n  ] = useState(9); // le pido paginar 9  cards en cada page\n\n  const [recipesPerPageLimit] = useState(10);\n  const [maxRecipesPerPageLimit, setmaxRecipesPerPageLimit] = useState(10);\n  const [minRecipesPerPageLimit, setminRecipesPerPageLimit] = useState(0);\n\n  const paginate = event => {\n    // esto setea el paginado\n    setCurrentPage(Number(event.target.id));\n  };\n\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const indexOfLastRecipe = currentPage * recipesPerPage;\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\n  const currentRecipes = allRecipes.slice(indexOfFirstRecipe, indexOfLastRecipe);\n  const renderPageNumers = pageNumbers.map(number => {\n    if (number < maxRecipesPerPageLimit + 1 && number > minRecipesPerPageLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: number,\n        onClick: paginate,\n        className: currentPage === number ? 'active' : null,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  });\n\n  const handleNextbtn = () => {\n    setCurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxRecipesPerPageLimit) {\n      setmaxRecipesPerPageLimit(maxRecipesPerPageLimit + recipesPerPageLimit);\n      setminRecipesPerPageLimit(minRecipesPerPageLimit + recipesPerPageLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    if ((currentPage - 1) % recipesPerPageLimit === 0) {\n      setmaxRecipesPerPageLimit(maxRecipesPerPageLimit - recipesPerPageLimit);\n      setminRecipesPerPageLimit(minRecipesPerPageLimit - recipesPerPageLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n\n  if (pageNumbers.lenght > maxRecipesPerPageLimit) {\n    pageIncrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handleNextbtn,\n      children: \"&hellip \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }, this);\n  }\n\n  let pageDecrementBtn = null;\n\n  if (minRecipesPerPageLimit >= 1) {\n    pageDecrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handlePrevbtn,\n      children: \"&hellip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paginate\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevbtn,\n          disabled: currentPage === pageNumbers[0] ? true : false,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), pageDecrementBtn, renderPageNumers, pageIncrementBtn, /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextbtn,\n          disabled: currentPage === pageNumbers[pageNumbers.length - 1] ? true : false,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 3\n  }, this);\n} //paginate\n\n\n_s(PaginateComponent, \"h0UJ7gwh1/Orv/zjl+zv0oZ2Qnc=\");\n\n_c = PaginateComponent;\nexport default function Home() {\n  _s2();\n\n  const [,\n  /*refreshState*/\n  setRefreshState] = useState(false);\n  const dispatch = useDispatch();\n  const allRecipes = useSelector(state => state.recipes);\n  const diets = useSelector(state => state.diets);\n  const error = useSelector(state => state.error); //Paginado:\n  // ver aca \n\n  const [\n    /*orderName*/\n  , setOrderName] = useState(\"\");\n  const [\n    /*orderLike*/\n  , setOrderLike] = useState(\"\");\n  const [\n    /*cambio*/\n  , setCambio] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recipesPerPage\n  /*setRecipesPerPage*/\n  ] = useState(9); // le pido paginar 9  cards en cada page\n\n  const indexOfLastRecipe = currentPage * recipesPerPage;\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\n  const currentRecipes = allRecipes.slice(indexOfFirstRecipe, indexOfLastRecipe);\n  useEffect(() => {\n    dispatch(getRecipes()); // trae todas las recetas\n\n    setCambio(true);\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getTypesOfDiet()); // trae los tipos  de  dieta\n  }, [dispatch]);\n\n  const clearErrors = () => {\n    //manejo de errores\n    dispatch(clearError());\n  };\n\n  function handleClick(e) {\n    // con este handle click me traigo todas las recetas\n    e.preventDefault();\n    dispatch(getRecipes());\n  }\n\n  function handleSelectTypeOfDiet(e) {\n    dispatch(filterByDiet(e.target.value));\n    setCurrentPage(1);\n    setRefreshState(prevState => !prevState);\n  }\n\n  function handleSelectByName(e) {\n    e.preventDefault();\n    dispatch(orderByName(e.target.value));\n    setCurrentPage(1);\n    setOrderName(\"Order\" + e.target.value);\n  }\n\n  function handleSelectByScore(e) {\n    e.preventDefault();\n    dispatch(orderByScoreLikes(e.target.value));\n    setCurrentPage(1);\n    setOrderLike(\"Order\" + e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"pick one for me!!!\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://i.ibb.co/WFBhFLb/Harsh-Stickers1.png\",\n        alt: \"Harsh-Stickers1\",\n        border: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Modal, {\n      show: true,\n      setShow: clearErrors,\n      message: \"Found no results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/recipe\",\n      className: \"linkCreate\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btnCreate\",\n        children: \"Create your own recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showAll\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          handleClick(e);\n        },\n        children: \"Show all recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"span\",\n        children: \"Order by Recipe Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: n => handleSelectByName(n),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"A-Z\",\n          children: \"A-Z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Z-A\",\n          children: \"Z-A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"span\",\n        children: \"Order by Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: s => handleSelectByScore(s),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Asc\",\n          children: \"Highest Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Desc\",\n          children: \"Lowest Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"span\",\n        children: \"Filter by Type of diet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => handleSelectTypeOfDiet(e),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"All Diets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), diets.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: d.name,\n          children: d.name\n        }, d.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginateComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: allRecipes.length > 0 ? currentRecipes === null || currentRecipes === void 0 ? void 0 : currentRecipes.map(c => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home/\" + c.id,\n            className: \"linkCard\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: c.title,\n              image: c.image ? c.image : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://shorturl.ae/eEB8K\",\n                alt: \"Img not provided\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this),\n              diets: c.createdDb ? c.diets.map(d => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dietsMap\",\n                children: d.name\n              }, d.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 44\n              }, this)) : c.diets.map(d => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dietsMap\",\n                children: d\n              }, d, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 44\n              }, this)),\n              vegetarian: c.vegetarian === true ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dietsMap\",\n                children: \"vegetarian\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 22\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this),\n              score: c.aggregateLikes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(LoadingHome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Home, \"pNgtoWSjT2F/KQkhcenqztguIgA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c2 = Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PaginateComponent\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["C:/Users/ttige/Desktop/harsh/client/src/components/Home/Home.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getRecipes","filterByDiet","getTypesOfDiet","orderByName","orderByScoreLikes","clearError","Link","Card","SearchBar","LoadingHome","Modal","PaginateComponent","allRecipes","getRecipesFunction","render","setRender","currentPage","setCurrentPage","recipesPerPage","recipesPerPageLimit","maxRecipesPerPageLimit","setmaxRecipesPerPageLimit","minRecipesPerPageLimit","setminRecipesPerPageLimit","paginate","event","Number","target","id","pageNumbers","i","Math","ceil","push","indexOfLastRecipe","indexOfFirstRecipe","currentRecipes","slice","renderPageNumers","map","number","handleNextbtn","handlePrevbtn","pageIncrementBtn","lenght","pageDecrementBtn","length","Home","setRefreshState","dispatch","state","recipes","diets","error","setOrderName","setOrderLike","setCambio","clearErrors","handleClick","e","preventDefault","handleSelectTypeOfDiet","value","prevState","handleSelectByName","handleSelectByScore","n","s","d","name","c","title","image","createdDb","vegetarian","aggregateLikes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getRecipes,\r\n  filterByDiet,\r\n  getTypesOfDiet,\r\n  orderByName,\r\n  orderByScoreLikes,\r\n  clearError,\r\n \r\n} from \"../../actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../Card/Card\";\r\n//import Paginate from \"../Paginate/Paginate\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport LoadingHome from \"../loading/LoadingHome\"\r\nimport Modal from \"../modal/Modal\";\r\n\r\n\r\nimport \"./Home.css\";\r\n\r\n\r\n\r\nfunction PaginateComponent({allRecipes, getRecipes}){\r\n  function getRecipesFunction(){\r\n    getRecipes()\r\n  }\r\n  useEffect(()=> {\r\n    getRecipesFunction()\r\n  }, [])\r\n\r\n  const [render, setRender] =  useState(allRecipes)\r\n\r\nconst [currentPage, setCurrentPage] = useState(1);        // aca seteo la pagina inicial en 1\r\nconst [recipesPerPage, /*setRecipesPerPage*/] = useState(9);  // le pido paginar 9  cards en cada page\r\n\r\nconst [recipesPerPageLimit] = useState(10)\r\n  const [maxRecipesPerPageLimit, setmaxRecipesPerPageLimit] = useState(10);\r\n  const [minRecipesPerPageLimit , setminRecipesPerPageLimit] = useState(0);\r\n\r\n\r\n  const paginate = (event) => {   // esto setea el paginado\r\n    setCurrentPage(Number(event.target.id));\r\n    };\r\n\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    \r\n  const indexOfLastRecipe = currentPage * recipesPerPage;   \r\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\r\n\r\n  const currentRecipes = allRecipes.slice(\r\n    indexOfFirstRecipe,\r\n    indexOfLastRecipe\r\n  );\r\n\r\n  const renderPageNumers = pageNumbers.map((number) =>{\r\n    if (number < maxRecipesPerPageLimit + 1 && number > minRecipesPerPageLimit){\r\n      return (\r\n        <li key={number}\r\n        id= {number}\r\n        onClick={paginate}\r\n        className={currentPage === number ? 'active' : null}\r\n        >\r\n          {number}\r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n \r\n  });\r\n  \r\n  const handleNextbtn = () => {\r\n    setCurrentPage(currentPage +1);\r\n    if (currentPage + 1 > maxRecipesPerPageLimit) {\r\n      setmaxRecipesPerPageLimit(maxRecipesPerPageLimit + recipesPerPageLimit)\r\n      setminRecipesPerPageLimit(minRecipesPerPageLimit + recipesPerPageLimit)\r\n    }\r\n  };\r\n\r\n  const handlePrevbtn = () =>{\r\n\r\n    if ((currentPage - 1 ) % recipesPerPageLimit === 0) {\r\n      setmaxRecipesPerPageLimit(maxRecipesPerPageLimit - recipesPerPageLimit);\r\n      setminRecipesPerPageLimit(minRecipesPerPageLimit - recipesPerPageLimit);\r\n      \r\n    }\r\n }\r\n\r\n\r\n\r\n let pageIncrementBtn = null;\r\n if (pageNumbers.lenght >  maxRecipesPerPageLimit){\r\n   pageIncrementBtn = <li onClick={handleNextbtn}>&hellip </li> \r\n }\r\n\r\n let pageDecrementBtn = null;\r\n if (minRecipesPerPageLimit >= 1){\r\n   pageDecrementBtn = <li onClick={handlePrevbtn}>&hellip</li>\r\n }\r\n\r\n\r\n return(\r\n  <div className=\"paginate\">\r\n  <ul>\r\n    <li>\r\n      <button \r\n      onClick={handlePrevbtn}\r\n      disabled={currentPage === pageNumbers[0]? true : false}\r\n      >\r\n        Prev\r\n      </button>\r\n    </li>\r\n\r\n    {pageDecrementBtn}\r\n    {renderPageNumers}\r\n    {pageIncrementBtn}\r\n\r\n\r\n    <li>\r\n      <button\r\n      onClick={handleNextbtn}\r\n      disabled={currentPage === pageNumbers[pageNumbers.length - 1] ? true : false}>\r\n      Next\r\n      </button>\r\n    </li>\r\n  </ul>\r\n</div>\r\n )\r\n\r\n \r\n\r\n}\r\n\r\n//paginate\r\n\r\n \r\n\r\n\r\nexport default function Home() {\r\n  const [, /*refreshState*/ setRefreshState] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const allRecipes = useSelector((state) => state.recipes);\r\n  const diets = useSelector((state) => state.diets);\r\n  const error = useSelector(state => state.error);\r\n\r\n\r\n\r\n  //Paginado:\r\n\r\n\r\n\r\n\r\n  \r\n  // ver aca \r\n \r\n\r\n\r\n const [/*orderName*/, setOrderName] = useState(\"\");\r\n const [/*orderLike*/, setOrderLike] = useState(\"\");\r\n const [/*cambio*/, setCambio] = useState(false);\r\n\r\n const [currentPage, setCurrentPage] = useState(1);  \r\n\r\n const [recipesPerPage, /*setRecipesPerPage*/] = useState(9);  // le pido paginar 9  cards en cada page\r\n const indexOfLastRecipe = currentPage * recipesPerPage;   \r\n const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\r\n\r\n const currentRecipes = allRecipes.slice(\r\n   indexOfFirstRecipe,\r\n   indexOfLastRecipe\r\n );\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getRecipes());  // trae todas las recetas\r\n    setCambio(true);\r\n    \r\n   \r\n    \r\n    \r\n  }, [dispatch]);\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getTypesOfDiet());  // trae los tipos  de  dieta\r\n  }, [dispatch]);\r\n\r\n  const clearErrors = () => { //manejo de errores\r\n    dispatch(clearError());\r\n}\r\n\r\n  function handleClick(e) {    // con este handle click me traigo todas las recetas\r\n    e.preventDefault();\r\n    dispatch(getRecipes());\r\n    \r\n  }\r\n\r\n\r\n  function handleSelectTypeOfDiet(e) {         \r\n    dispatch(filterByDiet(e.target.value));\r\n    \r\n    setCurrentPage(1)\r\n\r\n    setRefreshState((prevState) => !prevState);\r\n    \r\n  }\r\n\r\n  function handleSelectByName(e) {\r\n    e.preventDefault();\r\n    dispatch(orderByName(e.target.value));\r\n    setCurrentPage(1);\r\n    setOrderName(\"Order\" + e.target.value);\r\n  }\r\n\r\n\r\n  function handleSelectByScore(e) {\r\n    e.preventDefault();\r\n    dispatch(orderByScoreLikes(e.target.value));\r\n    setCurrentPage(1);\r\n    setOrderLike(\"Order\" + e.target.value);\r\n  }\r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>pick one for me!!!<img src=\"https://i.ibb.co/WFBhFLb/Harsh-Stickers1.png\" alt=\"Harsh-Stickers1\" border=\"0\" /></h1>\r\n      <SearchBar />\r\n\r\n      {error && <Modal show={true} setShow={clearErrors} message={\"Found no results\"} />}\r\n      \r\n      <Link to=\"/recipe\" className=\"linkCreate\">\r\n        <button className=\"btnCreate\">Create your own recipe</button>\r\n      </Link>\r\n      <div className=\"showAll\">\r\n        <button\r\n          onClick={(e) => {\r\n            handleClick(e);\r\n          }}\r\n        >\r\n          Show all recipes\r\n          \r\n\r\n          \r\n        </button>\r\n      </div>\r\n\r\n   \r\n      <div className=\"select\">\r\n\r\n\r\n        <span className=\"span\">Order by Recipe Name</span>\r\n        <select onChange={(n) => handleSelectByName(n)}>\r\n          <option value=\"default\">All</option>\r\n          <option value=\"A-Z\">A-Z</option>\r\n          <option value=\"Z-A\">Z-A</option>\r\n        </select>\r\n\r\n\r\n        <span className=\"span\">Order by Score</span>\r\n        <select onChange={(s) => handleSelectByScore(s)}>\r\n          <option value=\"All\">All</option>\r\n          <option value=\"Asc\">Highest Score</option>\r\n          <option value=\"Desc\">Lowest Score</option>\r\n        </select>\r\n\r\n\r\n        <span className=\"span\">Filter by Type of diet</span>\r\n        <select onChange={(e) => handleSelectTypeOfDiet(e)}>\r\n          <option value=\"default\">All Diets</option>\r\n\r\n          {diets.map((d) => (\r\n            <option value={d.name} key={d.id}>\r\n              {d.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        </div>\r\n\r\n\r\n\r\n       \r\n\r\n      \r\n\r\n\r\n      <PaginateComponent />\r\n      <div className=\"cards\">\r\n      \r\n       \r\n      {allRecipes.length>0? currentRecipes?.map((c) => {\r\n         \r\n        return  (\r\n          <div key={c.id}>\r\n             \r\n            <Link to={\"/home/\" + c.id} className=\"linkCard\">\r\n             \r\n              <Card\r\n               \r\n                title={c.title}\r\n\r\n\r\n                image={\r\n                  c.image \r\n                  ?(c.image) \r\n                  :(<img src=\"https://shorturl.ae/eEB8K\" alt=\"Img not provided\"/>)                  \r\n                 }   \r\n\r\n\r\n                diets={\r\n                  c.createdDb\r\n                    ? c.diets.map((d) => ( <p key={d.name} className=\"dietsMap\">{d.name}</p>))\r\n                    : c.diets.map((d) => ( <p key={d} className=\"dietsMap\">{d}</p>))\r\n                     }\r\n\r\n                vegetarian={\r\n                  c.vegetarian === true \r\n                  ? (<p className=\"dietsMap\">vegetarian</p>) \r\n                  :(<p></p>)\r\n                  }\r\n\r\n\r\n                score={c.aggregateLikes}\r\n\r\n\r\n              />\r\n              \r\n            </Link>\r\n            \r\n          </div>)})    : <LoadingHome/>}  \r\n          \r\n        </div> \r\n      \r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}