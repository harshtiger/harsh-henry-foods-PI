{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ttige\\\\Desktop\\\\harsh\\\\client\\\\src\\\\components\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRecipes, filterByDiet, getTypesOfDiet, orderByName, orderByScoreLikes, clearError, setPagIndexes\n/* getNameRecipe*/\n} from \"../../actions\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"../Card/Card\";\nimport Paginate from \"../Paginate/Paginate\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport LoadingHome from \"../loading/LoadingHome\";\nimport Modal from \"../modal/Modal\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [,\n  /*refreshState*/\n  setRefreshState] = useState(false);\n  const dispatch = useDispatch();\n  const allRecipes = useSelector(state => state.recipes);\n  const diets = useSelector(state => state.diets);\n  const error = useSelector(state => state.error); //Paginado:\n\n  const [currentPage, setCurrentPage] = useState(1); // aca seteo la pagina inicial en 1\n\n  const [recipesPerPage, setRecipesPerPage] = useState(9); // le pido paginar 9  cards en cada page\n\n  const indexOfLastRecipe = currentPage * recipesPerPage;\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\n  const currentRecipes = allRecipes.slice(indexOfFirstRecipe, indexOfLastRecipe);\n  const pagesDisplayLimit = 5;\n  const [maxPageDisplay, setMaxPageDisplay] = useState(5);\n  const [minPageDisplay, setMinPageDisplay] = useState(1); //\n\n  useEffect(() => dispatch(setPagIndexes(indexOfLastRecipe, indexOfFirstRecipe)), [indexOfLastRecipe, indexOfFirstRecipe, dispatch]);\n  useEffect(() => {\n    setCurrentPage(1);\n    setMaxPageDisplay(5);\n    setMinPageDisplay(1);\n  }, [allRecipes]);\n  const pageNumber = [];\n\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\n    pageNumber.push(i);\n  }\n\n  const handleNext = () => {\n    if (currentPage !== pageNumber.length) {\n      setCurrentPage(currentPage + 1);\n\n      if (currentPage + 1 > maxPageDisplay) {\n        console.log(maxPageDisplay);\n        setMaxPageDisplay(maxPageDisplay + pagesDisplayLimit);\n        setMinPageDisplay(minPageDisplay + pagesDisplayLimit);\n      }\n    }\n  };\n\n  const handleSupNext = () => {\n    const lastPage = pageNumber.length;\n\n    if (currentPage !== lastPage) {\n      setCurrentPage(lastPage);\n      setMaxPageDisplay(lastPage);\n      setMinPageDisplay(lastPage - pagesDisplayLimit + 1);\n    }\n  };\n\n  const handleSupPrev = () => {\n    console.log(\"owo\");\n\n    if (currentPage !== 1) {\n      setCurrentPage(1);\n      setMaxPageDisplay(5);\n      setMinPageDisplay(1);\n    }\n  };\n\n  const handlePrev = () => {\n    console.log(\"owo\");\n\n    if (currentPage !== 1) {\n      setCurrentPage(currentPage - 1);\n\n      if (currentPage - 1 < minPageDisplay) {\n        setMaxPageDisplay(maxPageDisplay - pagesDisplayLimit < 5 ? 5 : maxPageDisplay - pagesDisplayLimit);\n        setMinPageDisplay(minPageDisplay - pagesDisplayLimit <= 0 ? 1 : minPageDisplay - pagesDisplayLimit);\n      }\n    }\n  };\n\n  const paginate = pageNumber => {\n    // esto setea el paginado\n    setCurrentPage(pageNumber);\n  };\n\n  const [\n    /*orderName*/\n  , setOrderName] = useState(\"\");\n  const [\n    /*orderLike*/\n  , setOrderLike] = useState(\"\");\n  const [\n    /*cambio*/\n  , setCambio] = useState(false);\n  useEffect(() => {\n    dispatch(getRecipes()); // trae todas las recetas\n\n    setCambio(true);\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getTypesOfDiet()); // trae los tipos  de  dieta\n  }, [dispatch]);\n\n  const clearErrors = () => {\n    dispatch(clearError());\n  };\n\n  function handleClick(e) {\n    // con este handle click me traigo todas las recetas\n    e.preventDefault();\n    dispatch(getRecipes());\n  }\n\n  function handleSelectTypeOfDiet(e) {\n    dispatch(filterByDiet(e.target.value));\n    setCurrentPage(1);\n    setRefreshState(prevState => !prevState);\n  }\n\n  function handleSelectByName(e) {\n    e.preventDefault();\n    dispatch(orderByName(e.target.value));\n    setCurrentPage(1);\n    setOrderName(\"Order\" + e.target.value);\n  }\n\n  function handleSelectByScore(e) {\n    e.preventDefault();\n    dispatch(orderByScoreLikes(e.target.value));\n    setCurrentPage(1);\n    setOrderLike(\"Order\" + e.target.value);\n  } //\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"pick one for me!!!\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://i.ibb.co/WFBhFLb/Harsh-Stickers1.png\",\n        alt: \"Harsh-Stickers1\",\n        border: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Modal, {\n      show: true,\n      setShow: clearErrors,\n      message: \"No results were found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/recipe\",\n      className: \"linkCreate\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btnCreate\",\n        children: \"Create your own recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showAll\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          handleClick(e);\n        },\n        children: \"Show all recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"span\",\n        children: \"Order by Recipe Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: n => handleSelectByName(n),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"A-Z\",\n          children: \"A-Z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Z-A\",\n          children: \"Z-A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"span\",\n        children: \"Order by Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: s => handleSelectByScore(s),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Asc\",\n          children: \"Highest Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Desc\",\n          children: \"Lowest Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"span\",\n        children: \"Filter by Type of diet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => handleSelectTypeOfDiet(e),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"All Diets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), diets.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: d.name,\n          children: d.name\n        }, d.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginate\",\n      children: /*#__PURE__*/_jsxDEV(Paginate, {\n        paginate: paginate,\n        handleNext: handleNext,\n        handleSupNext: handleSupNext,\n        handlePrev: handlePrev,\n        handleSupPrev: handleSupPrev,\n        maxPageDisplay: maxPageDisplay,\n        minPageDisplay: minPageDisplay,\n        currentPage: currentPage,\n        recipesPerPage: recipesPerPage,\n        allRecipes: allRecipes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: allRecipes.length > 0 ? currentRecipes === null || currentRecipes === void 0 ? void 0 : currentRecipes.map(c => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home/\" + c.id,\n            className: \"linkCard\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: c.title,\n              image: c.image ? c.image : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://shorturl.ae/eEB8K\",\n                alt: \"Img not provided\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this),\n              diets: c.createdDb ? c.diets.map(d => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dietsMap\",\n                children: d.name\n              }, d.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 44\n              }, this)) : c.diets.map(d => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dietsMap\",\n                children: d\n              }, d, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 44\n              }, this)),\n              vegetarian: c.vegetarian === true ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dietsMap\",\n                children: \"vegetarian\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 22\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this),\n              score: c.aggregateLikes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(LoadingHome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginate\",\n      children: /*#__PURE__*/_jsxDEV(Paginate, {\n        paginate: paginate,\n        handleNext: handleNext,\n        handleSupNext: handleSupNext,\n        handlePrev: handlePrev,\n        handleSupPrev: handleSupPrev,\n        maxPageDisplay: maxPageDisplay,\n        minPageDisplay: minPageDisplay,\n        allRecipes: allRecipes,\n        recipesPerPage: recipesPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"Qp5qlQN2n2C2zMOSJXOfp2LOOh0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/ttige/Desktop/harsh/client/src/components/Home/Home.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getRecipes","filterByDiet","getTypesOfDiet","orderByName","orderByScoreLikes","clearError","setPagIndexes","Link","Card","Paginate","SearchBar","LoadingHome","Modal","Home","setRefreshState","dispatch","allRecipes","state","recipes","diets","error","currentPage","setCurrentPage","recipesPerPage","setRecipesPerPage","indexOfLastRecipe","indexOfFirstRecipe","currentRecipes","slice","pagesDisplayLimit","maxPageDisplay","setMaxPageDisplay","minPageDisplay","setMinPageDisplay","pageNumber","i","Math","ceil","push","handleNext","length","console","log","handleSupNext","lastPage","handleSupPrev","handlePrev","paginate","setOrderName","setOrderLike","setCambio","clearErrors","handleClick","e","preventDefault","handleSelectTypeOfDiet","target","value","prevState","handleSelectByName","handleSelectByScore","n","s","map","d","name","id","c","title","image","createdDb","vegetarian","aggregateLikes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getRecipes,\r\n  filterByDiet,\r\n  getTypesOfDiet,\r\n  orderByName,\r\n  orderByScoreLikes,\r\n  clearError,\r\n  setPagIndexes,\r\n /* getNameRecipe*/\r\n} from \"../../actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../Card/Card\";\r\nimport Paginate from \"../Paginate/Paginate\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport LoadingHome from \"../loading/LoadingHome\"\r\nimport Modal from \"../modal/Modal\";\r\n\r\n\r\n\r\n\r\nimport \"./Home.css\";\r\n\r\n\r\n\r\n\r\nexport default function Home() {\r\n  const [, /*refreshState*/ setRefreshState] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const allRecipes = useSelector(state => state.recipes);\r\n  const diets = useSelector((state) => state.diets);\r\n  const error = useSelector(state => state.error);\r\n\r\n\r\n\r\n  //Paginado:\r\n\r\n \r\n  const [currentPage, setCurrentPage] = useState(1);        // aca seteo la pagina inicial en 1\r\n  const [recipesPerPage, setRecipesPerPage] = useState(9);// le pido paginar 9  cards en cada page\r\n  const indexOfLastRecipe = currentPage * recipesPerPage;   \r\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\r\n  const currentRecipes = allRecipes.slice(\r\n    indexOfFirstRecipe,\r\n    indexOfLastRecipe\r\n  );\r\n\r\n  const pagesDisplayLimit = 5;\r\nconst [maxPageDisplay, setMaxPageDisplay] = useState(5); \r\nconst [minPageDisplay, setMinPageDisplay] = useState(1);\r\n//\r\n\r\nuseEffect(\r\n  () => dispatch(setPagIndexes(indexOfLastRecipe, indexOfFirstRecipe)),\r\n  [indexOfLastRecipe, indexOfFirstRecipe, dispatch]\r\n);\r\n\r\n\r\nuseEffect(() => {\r\n  setCurrentPage(1);\r\n  setMaxPageDisplay(5);\r\n  setMinPageDisplay(1);\r\n}, [allRecipes]);\r\n\r\n\r\n\r\n\r\n\r\nconst pageNumber = [];\r\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\r\n    pageNumber.push(i);\r\n  }\r\n\r\n\r\n  \r\n  const handleNext = () => {\r\n    if (currentPage !== pageNumber.length) {\r\n      setCurrentPage(currentPage + 1);\r\n      if (currentPage + 1 > maxPageDisplay) {\r\n        console.log(maxPageDisplay)\r\n        setMaxPageDisplay(maxPageDisplay + pagesDisplayLimit);\r\n        setMinPageDisplay(minPageDisplay + pagesDisplayLimit);\r\n      }\r\n      \r\n      \r\n    }\r\n  };\r\n\r\n  const handleSupNext = () => {\r\n    const lastPage = pageNumber.length;\r\n    if (currentPage !== lastPage) {\r\n      setCurrentPage(lastPage);\r\n      setMaxPageDisplay(lastPage);\r\n      setMinPageDisplay(lastPage - pagesDisplayLimit + 1);\r\n    }\r\n  };\r\n\r\n  const handleSupPrev = () => {\r\n    console.log(\"owo\")\r\n    \r\n    if (currentPage !== 1) {\r\n      setCurrentPage(1);\r\n      setMaxPageDisplay(5);\r\n      setMinPageDisplay(1);\r\n      \r\n    }\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    console.log(\"owo\")\r\n    if (currentPage !== 1) {\r\n      setCurrentPage(currentPage - 1);\r\n      if (currentPage - 1 < minPageDisplay) {\r\n        setMaxPageDisplay(\r\n          maxPageDisplay - pagesDisplayLimit < 5 ? 5 : maxPageDisplay - pagesDisplayLimit\r\n        );\r\n        setMinPageDisplay(\r\n          minPageDisplay - pagesDisplayLimit <= 0 ? 1 : minPageDisplay - pagesDisplayLimit\r\n        );\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  \r\n  const paginate = (pageNumber) => {   // esto setea el paginado\r\n    setCurrentPage(pageNumber);\r\n    };\r\n\r\n\r\n\r\n\r\n const [/*orderName*/, setOrderName] = useState(\"\");\r\n const [/*orderLike*/, setOrderLike] = useState(\"\");\r\n const [/*cambio*/, setCambio] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getRecipes());  // trae todas las recetas\r\n    setCambio(true);\r\n    \r\n   \r\n    \r\n    \r\n  }, [dispatch]);\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getTypesOfDiet());  // trae los tipos  de  dieta\r\n  }, [dispatch]);\r\n\r\n  const clearErrors = () => {\r\n    dispatch(clearError());\r\n}\r\n\r\n  function handleClick(e) {    // con este handle click me traigo todas las recetas\r\n    e.preventDefault();\r\n    \r\n    dispatch(getRecipes());\r\n    \r\n  }\r\n\r\n\r\n  function handleSelectTypeOfDiet(e) {         \r\n    dispatch(filterByDiet(e.target.value));\r\n    \r\n    setCurrentPage(1)\r\n\r\n    setRefreshState((prevState) => !prevState);\r\n    \r\n  }\r\n\r\n  function handleSelectByName(e) {\r\n    e.preventDefault();\r\n    dispatch(orderByName(e.target.value));\r\n    setCurrentPage(1);\r\n    setOrderName(\"Order\" + e.target.value);\r\n  }\r\n\r\n\r\n  function handleSelectByScore(e) {\r\n    e.preventDefault();\r\n    dispatch(orderByScoreLikes(e.target.value));\r\n    setCurrentPage(1);\r\n    setOrderLike(\"Order\" + e.target.value);\r\n  }\r\n\r\n  //\r\n\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>pick one for me!!!<img src=\"https://i.ibb.co/WFBhFLb/Harsh-Stickers1.png\" alt=\"Harsh-Stickers1\" border=\"0\" /></h1>\r\n      <SearchBar />\r\n      {error && <Modal show={true} setShow={clearErrors} message={\"No results were found\"} />}\r\n      \r\n      <Link to=\"/recipe\" className=\"linkCreate\">\r\n        <button className=\"btnCreate\">Create your own recipe</button>\r\n      </Link>\r\n      <div className=\"showAll\">\r\n        <button\r\n          onClick={(e) => {\r\n            handleClick(e);\r\n          }}\r\n        >\r\n          Show all recipes\r\n          \r\n\r\n          \r\n        </button>\r\n      </div>\r\n\r\n   \r\n      <div className=\"select\">\r\n\r\n\r\n        <span className=\"span\">Order by Recipe Name</span>\r\n        <select onChange={(n) => handleSelectByName(n)}>\r\n          <option value=\"default\">All</option>\r\n          <option value=\"A-Z\">A-Z</option>\r\n          <option value=\"Z-A\">Z-A</option>\r\n        </select>\r\n\r\n\r\n        <span className=\"span\">Order by Score</span>\r\n        <select onChange={(s) => handleSelectByScore(s)}>\r\n          <option value=\"All\">All</option>\r\n          <option value=\"Asc\">Highest Score</option>\r\n          <option value=\"Desc\">Lowest Score</option>\r\n        </select>\r\n\r\n\r\n        <span className=\"span\">Filter by Type of diet</span>\r\n        <select onChange={(e) => handleSelectTypeOfDiet(e)}>\r\n          <option value=\"default\">All Diets</option>\r\n\r\n          {diets.map((d) => (\r\n            <option value={d.name} key={d.id}>\r\n              {d.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        </div>\r\n\r\n\r\n\r\n      <div className=\"paginate\">\r\n        <Paginate\r\n        paginate={paginate}\r\n        handleNext={handleNext}\r\n        handleSupNext={handleSupNext}\r\n        handlePrev={handlePrev}\r\n        handleSupPrev={handleSupPrev}\r\n        maxPageDisplay = {maxPageDisplay}\r\n        minPageDisplay = {minPageDisplay}\r\n        currentPage = {currentPage}\r\n        recipesPerPage = {recipesPerPage}\r\n        allRecipes ={allRecipes}\r\n       \r\n        \r\n      \r\n        \r\n\r\n        \r\n        /> \r\n      </div>\r\n      \r\n\r\n      \r\n\r\n\r\n\r\n      <div className=\"cards\">\r\n       \r\n      {allRecipes.length>0? currentRecipes?.map((c) => {\r\n         \r\n        return  (\r\n          <div key={c.id}>\r\n             \r\n            <Link to={\"/home/\" + c.id} className=\"linkCard\">\r\n             \r\n              <Card\r\n               \r\n                title={c.title}\r\n\r\n\r\n                image={\r\n                  c.image \r\n                  ?(c.image) \r\n                  :(<img src=\"https://shorturl.ae/eEB8K\" alt=\"Img not provided\"/>)                  \r\n                 }   \r\n\r\n\r\n                diets={\r\n                  c.createdDb\r\n                    ? c.diets.map((d) => ( <p key={d.name} className=\"dietsMap\">{d.name}</p>))\r\n                    : c.diets.map((d) => ( <p key={d} className=\"dietsMap\">{d}</p>))\r\n                     }\r\n\r\n                vegetarian={\r\n                  c.vegetarian === true \r\n                  ? (<p className=\"dietsMap\">vegetarian</p>) \r\n                  :(<p></p>)\r\n                  }\r\n\r\n\r\n                score={c.aggregateLikes}\r\n\r\n\r\n              />\r\n              \r\n            </Link>\r\n            \r\n          </div>)})    : <LoadingHome/>}  \r\n          \r\n        </div> \r\n      \r\n      \r\n\r\n\r\n\r\n\r\n\r\n      <div className=\"paginate\">\r\n      <Paginate\r\n        paginate={paginate}\r\n        handleNext={handleNext}\r\n        handleSupNext={handleSupNext}\r\n        handlePrev={handlePrev}\r\n        handleSupPrev={handleSupPrev}\r\n        maxPageDisplay = {maxPageDisplay}\r\n        minPageDisplay = {minPageDisplay}\r\n        allRecipes = {allRecipes}\r\n        recipesPerPage={recipesPerPage}\r\n\r\n        \r\n        />  \r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}