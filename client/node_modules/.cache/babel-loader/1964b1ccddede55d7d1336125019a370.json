{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ttige\\\\Desktop\\\\harsh\\\\client\\\\src\\\\components\\\\Paginate\\\\Paginate.jsx\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./Paginate.css\"; //action \n//import {setPagIndexes} from \"../../actions/index\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Paginate(_ref) {\n  let {\n    allRecipes,\n    recipesPerPage,\n    paginate,\n    handleNext,\n    handleSupNext,\n    handleSupPrev,\n    handlePrev,\n    maxPageDisplay,\n    minPageDisplay\n  } = _ref;\n  //const dispatch = useDispatch();\n  //const allRecipes = useSelector(state => state.recipes.length);\n  // \n  //const [currentPage, /*setCurrentPage*/] = useState(1);\n  //const recipesPerPage= 9;\n  //const indexOfLastRecipe = currentPage * recipesPerPage;   \n  //const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"btnPag\",\n    children: pageNumbers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSupPrev,\n        children: \"<<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrev,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), pageNumbers === null || pageNumbers === void 0 ? void 0 : pageNumbers.map(number => {\n        if (number <= maxPageDisplay && number >= minPageDisplay) {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            id: number,\n            onClick: () => paginate(number),\n            children: number\n          }, number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this);\n        } else {\n          return null;\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSupNext,\n        children: \">>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n}\n_c = Paginate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["C:/Users/ttige/Desktop/harsh/client/src/components/Paginate/Paginate.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","Paginate","allRecipes","recipesPerPage","paginate","handleNext","handleSupNext","handleSupPrev","handlePrev","maxPageDisplay","minPageDisplay","pageNumbers","i","Math","ceil","push","length","map","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAO,gBAAP,C,CAEA;AACA;;;AAIA,eAAe,SAASC,QAAT,OAAgJ;AAAA,MAA9H;AAACC,IAAAA,UAAD;AAAaC,IAAAA,cAAb;AAA6BC,IAAAA,QAA7B;AAAuCC,IAAAA,UAAvC;AAAmDC,IAAAA,aAAnD;AAAkEC,IAAAA,aAAlE;AAAiFC,IAAAA,UAAjF;AAA6FC,IAAAA,cAA7F;AAA6GC,IAAAA;AAA7G,GAA8H;AAE/J;AACA;AAEA;AAEA;AACA;AAEA;AACA;AASE,QAAMC,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUZ,UAAU,GAAGC,cAAvB,CAArB,EAA6DS,CAAC,EAA9D,EAAkE;AAChED,IAAAA,WAAW,CAACI,IAAZ,CAAiBH,CAAjB;AACD;;AAYD,sBAGA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cACKD,WAAW,CAACK,MAAZ,KAAuB,CAAvB,gBACC;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,8BACE;AAAS,QAAA,OAAO,EAAET,aAAlB;AAAA,kBAAkC;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEC,UAAjB;AAAA,kBAA8B;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF,EAGIG,WAHJ,aAGIA,WAHJ,uBAGIA,WAAW,CAAEM,GAAb,CAAiBC,MAAM,IAAI;AAC3B,YAAIA,MAAM,IAAIT,cAAV,IAA4BS,MAAM,IAAIR,cAA1C,EAA0D;AACxD,8BACE;AAEE,YAAA,EAAE,EAAEQ,MAFN;AAIE,YAAA,OAAO,EAAE,MAAMd,QAAQ,CAACc,MAAD,CAJzB;AAAA,sBAMGA;AANH,aACOA,MADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAXD,MAWO;AACL,iBAAO,IAAP;AACD;AACF,OAfC,CAHJ,eAmBE;AAAQ,QAAA,OAAO,EAAEb,UAAjB;AAAA,kBAA8B;AAA9B;AAAA;AAAA;AAAA;AAAA,cAnBF,eAoBE;AAAQ,QAAA,OAAO,EAAEC,aAAjB;AAAA,kBAAiC;AAAjC;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,UAHA;AAgCD;KAnEuBL,Q","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport \"./Paginate.css\";\r\n\r\n//action \r\n//import {setPagIndexes} from \"../../actions/index\";\r\n\r\n\r\n\r\nexport default function Paginate({allRecipes, recipesPerPage, paginate, handleNext, handleSupNext, handleSupPrev, handlePrev, maxPageDisplay, minPageDisplay}) {\r\n\r\n//const dispatch = useDispatch();\r\n//const allRecipes = useSelector(state => state.recipes.length);\r\n\r\n// \r\n\r\n//const [currentPage, /*setCurrentPage*/] = useState(1);\r\n//const recipesPerPage= 9;\r\n\r\n//const indexOfLastRecipe = currentPage * recipesPerPage;   \r\n//const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n  return (\r\n \r\n\r\n  <nav className=\"btnPag\">\r\n      {pageNumbers.length === 0 ? (\r\n        <p></p>\r\n      ) : (\r\n        <div>\r\n          <button  onClick={handleSupPrev}>{\"<<\"}</button>\r\n          <button onClick={handlePrev}>{\"<\"}</button>\r\n          { pageNumbers?.map(number => {\r\n            if (number <= maxPageDisplay && number >= minPageDisplay) {\r\n              return (\r\n                <button\r\n                  key={number}\r\n                  id={number}\r\n                  \r\n                  onClick={() => paginate(number)}\r\n                >\r\n                  {number}\r\n                </button>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n          <button onClick={handleNext}>{\">\"}</button>\r\n          <button onClick={handleSupNext}>{\">>\"}</button>\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}