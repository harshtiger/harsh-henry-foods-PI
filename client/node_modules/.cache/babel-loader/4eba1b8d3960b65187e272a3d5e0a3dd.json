{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ttige\\\\Desktop\\\\harsh\\\\client\\\\src\\\\components\\\\Paginate\\\\Paginates.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react'; //import './AppCheck.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Paginates(props) {\n  _s();\n\n  console.log('Lista props: ', props);\n  const list = useSelector(state => state.recetas);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pageNumberLimit, setPageNumberLimit] = useState(5);\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n  const [recetasPerPage, setRecetasPerPage] = useState(3); // const recetasPerPage = 5 ;\n\n  useEffect(() => {\n    setPageNumber(1);\n  }, []);\n  const indexOfLastItem = pageNumber * recetasPerPage;\n  const indexOfFirstItem = indexOfLastItem - recetasPerPage;\n  const pageCount = Math.ceil(list.length / recetasPerPage);\n  const currentItems = list.slice(indexOfFirstItem, indexOfLastItem);\n  const pages = [];\n\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push(i);\n  }\n\n  const handleClick = event => {\n    setPageNumber(Number(event.target.id));\n  };\n\n  const renderPageNumbers = pages.map(number => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: number,\n        onClick: handleClick,\n        className: pageNumber === number ? \"active\" : null,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this);\n    } else {\n      return null;\n    }\n  });\n\n  const handleNextbtn = () => {\n    setPageNumber(pageNumber + 1);\n\n    if (pageNumber + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setPageNumber(pageNumber - 1);\n\n    if ((pageNumber - 1) % pageNumberLimit === 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handleNextbtn,\n      children: \" \\u2026 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this);\n  }\n\n  let pageDecrementBtn = null;\n\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handlePrevbtn,\n      children: \" \\u2026 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this);\n  }\n\n  const handleLoadMore = () => {\n    setRecetasPerPage(recetasPerPage + 2);\n  };\n\n  const handleLoadLess = () => {\n    if (recetasPerPage > 2) setRecetasPerPage(recetasPerPage - 2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pageNumbers\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevbtn,\n          disabled: pageNumber === pages[0] ? true : false,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), pageDecrementBtn, renderPageNumbers, pageIncrementBtn, /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextbtn,\n          disabled: pageNumber === pages[pages.length - 1] ? true : false,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loadbuttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoadMore,\n          className: \"loadmore\",\n          children: \"+ items p/p\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoadLess,\n          className: \"loadmore\",\n          children: \"- items p/p\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n} //    <Link to={'/home'} className=\"btn\">\n// {'Home'} \n// </Link>\n\n_s(Paginates, \"qi60YfGeEJqFycaZCv8035O4YUw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Paginates;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginates\");","map":{"version":3,"sources":["C:/Users/ttige/Desktop/harsh/client/src/components/Paginate/Paginates.jsx"],"names":["useSelector","React","Link","useEffect","useState","Paginates","props","console","log","list","state","recetas","pageNumber","setPageNumber","pageNumberLimit","setPageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","recetasPerPage","setRecetasPerPage","indexOfLastItem","indexOfFirstItem","pageCount","Math","ceil","length","currentItems","slice","pages","i","push","handleClick","event","Number","target","id","renderPageNumbers","map","number","handleNextbtn","handlePrevbtn","pageIncrementBtn","pageDecrementBtn","handleLoadMore","handleLoadLess"],"mappings":"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","sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n//import './AppCheck.css'\r\n\r\nexport default function Paginates(props)  {\r\n  console.log('Lista props: ', props);\r\n\r\nconst list = useSelector(state => state.recetas)\r\nconst [pageNumber, setPageNumber] = useState(1);\r\nconst [pageNumberLimit, setPageNumberLimit] = useState(5);\r\nconst [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\r\nconst [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\nconst [recetasPerPage, setRecetasPerPage] = useState(3);\r\n// const recetasPerPage = 5 ;\r\nuseEffect(()=>{\r\n  setPageNumber(1);\r\n},[]);\r\n\r\nconst indexOfLastItem = pageNumber * recetasPerPage ;\r\nconst indexOfFirstItem = indexOfLastItem - recetasPerPage;\r\nconst pageCount = Math.ceil(list.length / recetasPerPage);\r\nconst currentItems = list.slice(indexOfFirstItem, indexOfLastItem);\r\nconst pages = [];\r\nfor(let i=1; i<= pageCount; i++) {\r\n  pages.push(i);\r\n}\r\nconst handleClick = (event) =>{\r\n  setPageNumber(Number(event.target.id));\r\n}\r\n\r\nconst renderPageNumbers = pages.map(number=>{\r\n if(number < maxPageNumberLimit+1 && number>minPageNumberLimit) {\r\n  return (\r\n    <li key={number}  id={number} \r\n       onClick={handleClick}\r\n       className={pageNumber === number ? \"active\" : null}>\r\n       {number}\r\n    </li>\r\n  );\r\n } else {\r\n   return null ;\r\n }\r\n})\r\n\r\nconst handleNextbtn = () => {\r\n  setPageNumber(pageNumber + 1);\r\n  if(pageNumber+1 > maxPageNumberLimit){\r\n    setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n    setminPageNumberLimit(minPageNumberLimit + pageNumberLimit)\r\n\r\n  }\r\n}\r\nconst handlePrevbtn = () => {\r\n  setPageNumber(pageNumber -1)  \r\n  if((pageNumber-1) % pageNumberLimit === 0 ) {\r\n    setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n    setminPageNumberLimit(minPageNumberLimit - pageNumberLimit)\r\n   }\r\n  }\r\n  \r\n let pageIncrementBtn = null;\r\n if(pages.length > maxPageNumberLimit) {\r\n   pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>\r\n }  \r\n\r\n\r\nlet pageDecrementBtn = null;\r\n if(minPageNumberLimit >= 1) {\r\n   pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>\r\n }  \r\n\r\nconst handleLoadMore = () => {\r\n   setRecetasPerPage(recetasPerPage + 2);\r\n}\r\n\r\nconst handleLoadLess = () => {\r\n  if(recetasPerPage > 2) setRecetasPerPage(recetasPerPage - 2);\r\n}\r\n\r\n\r\n return (\r\n    \r\n  <>    \r\n    \r\n\r\n\r\n        <ul className=\"pageNumbers\">\r\n          <li>\r\n            <button onClick={handlePrevbtn} disabled={pageNumber === pages[0] ? true : false}>Prev</button>\r\n          </li>\r\n          {pageDecrementBtn}\r\n          {renderPageNumbers}\r\n          {pageIncrementBtn}\r\n          <li>\r\n            <button onClick={handleNextbtn} disabled={pageNumber === pages[pages.length - 1] ? true : false}>Next</button>\r\n          </li>\r\n          <div className=\"loadbuttons\">\r\n            <button onClick={handleLoadMore} className=\"loadmore\">+ items p/p</button>\r\n            <button onClick={handleLoadLess} className=\"loadmore\">- items p/p</button>\r\n          </div>\r\n        </ul>\r\n        \r\n\r\n     </>\r\n        \r\n    \r\n )\r\n\r\n\r\n}\r\n\r\n\r\n\r\n//    <Link to={'/home'} className=\"btn\">\r\n// {'Home'} \r\n// </Link>"]},"metadata":{},"sourceType":"module"}