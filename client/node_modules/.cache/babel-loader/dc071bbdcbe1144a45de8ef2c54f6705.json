{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ttige\\\\Desktop\\\\harsh\\\\client\\\\src\\\\components\\\\Paginate\\\\Paginate.jsx\";\nimport React from \"react\";\nimport \"./Paginate.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Paginate(_ref) {\n  let {\n    recipesPerPage,\n    allRecipes,\n    paginate\n  } = _ref;\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"btnPag\",\n    children: pageNumbers && pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => paginate(number),\n      children: number\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 4\n  }, this);\n}\n_c = Paginate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["C:/Users/ttige/Desktop/harsh/client/src/components/Paginate/Paginate.jsx"],"names":["React","Paginate","recipesPerPage","allRecipes","paginate","pageNumbers","i","Math","ceil","push","map","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;;AAEA,eAAe,SAASC,QAAT,OAA4D;AAAA,MAA1C;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,UAAlB;AAA8BC,IAAAA;AAA9B,GAA0C;AACzE,QAAMC,WAAW,GAAG,EAApB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUL,UAAU,GAAGD,cAAvB,CAArB,EAA6DI,CAAC,EAA9D,EAAkE;AAChED,IAAAA,WAAW,CAACI,IAAZ,CAAiBH,CAAjB;AACD;;AACD,sBACC;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cACID,WAAW,IACVA,WAAW,CAACK,GAAZ,CAAiBC,MAAD,iBAChB;AAAqB,MAAA,OAAO,EAAE,MAAMP,QAAQ,CAACO,MAAD,CAA5C;AAAA,gBACKA;AADL,OAAaA,MAAb;AAAA;AAAA;AAAA;AAAA,YADA;AAFL;AAAA;AAAA;AAAA;AAAA,UADD;AAUD;KAhBuBV,Q","sourcesContent":["import React from \"react\";\r\nimport \"./Paginate.css\";\r\n\r\nexport default function Paginate({ recipesPerPage, allRecipes, paginate }) {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n   <nav className=\"btnPag\">\r\n      {pageNumbers &&\r\n        pageNumbers.map((number) => (\r\n        <button key={number} onClick={() => paginate(number)}>\r\n            {number}\r\n          </button>\r\n        ))}\r\n    </nav>\r\n  );\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}