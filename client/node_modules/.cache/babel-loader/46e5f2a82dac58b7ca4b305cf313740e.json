{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ttige\\\\Desktop\\\\harsh\\\\client\\\\src\\\\components\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRecipes, filterByDiet, getTypesOfDiet, orderByName, orderByScoreLikes, clearError, setPagIndexes } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"../Card/Card\";\nimport Paginates from \"../Paginate/Paginates\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Modal from \"../modal/Modal\";\nimport Loading from \"../loading/Loading\";\nimport \"./Home.css\"; // estilos\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [,\n  /*refreshState*/\n  setRefreshState] = useState(false);\n  const dispatch = useDispatch();\n  const allRecipes = useSelector(state => state.recipes);\n  const diets = useSelector(state => state.diets);\n  const error = useSelector(state => state.error); //Paginado:\n\n  const [currentPage, setCurrentPage] = useState(1); // aca seteo la pagina inicial en 1\n\n  const [recipesPerPage\n  /*setRecipesPerPage*/\n  ] = useState(9); // le pido paginar 9  cards en cada page\n\n  const indexOfLastRecipe = currentPage * recipesPerPage;\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\n  const currentRecipes = allRecipes.slice(indexOfFirstRecipe, indexOfLastRecipe);\n  const pagesDisplayLimit = 5; // aca  limito la cantidad de botones de paginado que quiero mostrar\n\n  const [maxPageDisplay, setMaxPageDisplay] = useState(5);\n  const [minPageDisplay, setMinPageDisplay] = useState(1);\n  let lastpage = [];\n\n  for (let i = 1; i <= Math.ceil(allRecipes.length / recipesPerPage); i++) {\n    // la ultima pagina, esto lo uso de indice para mi nextSup\n    lastpage.push(i);\n  } // use effects paginado\n\n\n  useEffect(() => dispatch(setPagIndexes(indexOfLastRecipe, indexOfFirstRecipe)), [indexOfLastRecipe, indexOfFirstRecipe, dispatch]);\n  useEffect(() => {\n    setCurrentPage(1);\n    setMaxPageDisplay(5);\n    setMinPageDisplay(1);\n  }, [allRecipes]); //handlers de mi paginate\n\n  const handleSupPrev = () => {\n    if (currentPage !== 1) {\n      setCurrentPage(1);\n      setMaxPageDisplay(5);\n      setMinPageDisplay(1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentPage !== 1) {\n      setCurrentPage(currentPage - 1);\n\n      if (currentPage - 1 < minPageDisplay) {\n        setMaxPageDisplay(maxPageDisplay - pagesDisplayLimit < 5 ? 5 : maxPageDisplay - pagesDisplayLimit);\n        setMinPageDisplay(minPageDisplay - pagesDisplayLimit <= 0 ? 1 : minPageDisplay - pagesDisplayLimit);\n      }\n    }\n  };\n\n  const handleNext = () => {\n    if (currentPage !== lastpage.length) {\n      setCurrentPage(currentPage + 1);\n\n      if (currentPage + 1 > maxPageDisplay) {\n        setMaxPageDisplay(maxPageDisplay + pagesDisplayLimit);\n        setMinPageDisplay(minPageDisplay + pagesDisplayLimit);\n      }\n    }\n  };\n\n  const handleSupNext = () => {\n    const lastPage = lastpage.length;\n\n    if (currentPage !== lastPage) {\n      setCurrentPage(lastPage);\n      setMaxPageDisplay(lastPage);\n      setMinPageDisplay(lastPage - pagesDisplayLimit + 1);\n    }\n  };\n\n  function paginate(pageNumber) {\n    // seteo la pagina acorde al click en el boton\n    setCurrentPage(pageNumber);\n  } //  manejo de orden de recetas\n\n\n  const [\n    /*orderName*/\n  , setOrderName] = useState(\"\");\n  const [\n    /*orderLike*/\n  , setOrderLike] = useState(\"\");\n  const [\n    /*cambio*/\n  , setCambio] = useState(false);\n  useEffect(() => {\n    dispatch(getRecipes()); // trae todas las recetas\n\n    setCambio(true);\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getTypesOfDiet()); // trae los tipos  de  dieta\n  }, [dispatch]);\n\n  const clearErrors = () => {\n    // manejo de errores para la ventana modal\n    dispatch(clearError());\n  };\n\n  function handleClick(e) {\n    e.preventDefault();\n    dispatch(getRecipes());\n  }\n\n  function handleSelectTypeOfDiet(e) {\n    dispatch(filterByDiet(e.target.value));\n    setCurrentPage(1);\n    setRefreshState(prevState => !prevState);\n  }\n\n  function handleSelectByName(e) {\n    e.preventDefault();\n    dispatch(orderByName(e.target.value));\n    setCurrentPage(1);\n    setOrderName(\"Order\" + e.target.value);\n  }\n\n  function handleSelectByScore(e) {\n    e.preventDefault();\n    dispatch(orderByScoreLikes(e.target.value));\n    setCurrentPage(1);\n    setOrderLike(\"Order\" + e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: allRecipes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"pick one for me!!!\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.ibb.co/WFBhFLb/Harsh-Stickers1.png\",\n          alt: \"Harsh-Stickers1\",\n          border: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(Modal, {\n        show: true,\n        setShow: clearErrors,\n        message: \"No results were found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showAll\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/recipe\",\n          className: \"showAll\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Create your own recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            handleClick(e);\n          },\n          children: \"Show all recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span\",\n          children: \"Order by Recipe Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: n => handleSelectByName(n),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"default\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"A-Z\",\n            children: \"A-Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Z-A\",\n            children: \"Z-A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span\",\n          children: \"Order by Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: s => handleSelectByScore(s),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Asc\",\n            children: \"Highest Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Desc\",\n            children: \"Lowest Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span\",\n          children: \"Filter by Type of diet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleSelectTypeOfDiet(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"default\",\n            children: \"All Diets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 11\n          }, this), diets.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: d.name,\n            children: d.name\n          }, d.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paginate\",\n        children: /*#__PURE__*/_jsxDEV(Paginates, {\n          paginate: paginate,\n          recipesPerPage: recipesPerPage,\n          allRecipes: allRecipes.length,\n          handleNext: handleNext,\n          handleSupNext: handleSupNext,\n          handleSupPrev: handleSupPrev,\n          handlePrev: handlePrev,\n          maxPageDisplay: maxPageDisplay,\n          minPageDisplay: minPageDisplay,\n          currentPage: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: currentRecipes === null || currentRecipes === void 0 ? void 0 : currentRecipes.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home/\" + c.id,\n            className: \"linkCard\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: c.title,\n              image: c.image ? c.image : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://shorturl.ae/eEB8K\",\n                alt: \"Img not provided\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this),\n              diets: c.createdDb ? c.diets.map(d => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dietsMap\",\n                children: d.name\n              }, d.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 44\n              }, this)) : c.diets.map(d => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dietsMap\",\n                children: d\n              }, d, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 44\n              }, this)),\n              vegetarian: c.vegetarian === true ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"dietsMap\",\n                children: \"vegetarian\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 22\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No veggie option aviable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this),\n              score: c.aggregateLikes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paginate\",\n        children: /*#__PURE__*/_jsxDEV(Paginates, {\n          paginate: paginate,\n          recipesPerPage: recipesPerPage,\n          allRecipes: allRecipes.length,\n          handleNext: handleNext,\n          handleSupNext: handleSupNext,\n          handleSupPrev: handleSupPrev,\n          handlePrev: handlePrev,\n          maxPageDisplay: maxPageDisplay,\n          minPageDisplay: minPageDisplay,\n          currentPage: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"XTgU6hSs9amoWtx5lFgeJicy+hg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/ttige/Desktop/harsh/client/src/components/Home/Home.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getRecipes","filterByDiet","getTypesOfDiet","orderByName","orderByScoreLikes","clearError","setPagIndexes","Link","Card","Paginates","SearchBar","Modal","Loading","Home","setRefreshState","dispatch","allRecipes","state","recipes","diets","error","currentPage","setCurrentPage","recipesPerPage","indexOfLastRecipe","indexOfFirstRecipe","currentRecipes","slice","pagesDisplayLimit","maxPageDisplay","setMaxPageDisplay","minPageDisplay","setMinPageDisplay","lastpage","i","Math","ceil","length","push","handleSupPrev","handlePrev","handleNext","handleSupNext","lastPage","paginate","pageNumber","setOrderName","setOrderLike","setCambio","clearErrors","handleClick","e","preventDefault","handleSelectTypeOfDiet","target","value","prevState","handleSelectByName","handleSelectByScore","n","s","map","d","name","id","c","title","image","createdDb","vegetarian","aggregateLikes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {getRecipes, filterByDiet, getTypesOfDiet, orderByName, orderByScoreLikes,\r\n        clearError, setPagIndexes} from \"../../actions\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../Card/Card\";\r\nimport Paginates from \"../Paginate/Paginates\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\n\r\nimport Modal from \"../modal/Modal\";\r\nimport Loading from \"../loading/Loading\";\r\n\r\nimport \"./Home.css\"; // estilos\r\n\r\n\r\nexport default function Home() {\r\n\r\n  const [, /*refreshState*/ setRefreshState] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const allRecipes = useSelector((state) => state.recipes);\r\n  const diets = useSelector((state) => state.diets);\r\n  const error = useSelector(state => state.error);\r\n\r\n  //Paginado:\r\n \r\n  const [currentPage, setCurrentPage] = useState(1);        // aca seteo la pagina inicial en 1\r\n  const [recipesPerPage, /*setRecipesPerPage*/] = useState(9);// le pido paginar 9  cards en cada page\r\n  const indexOfLastRecipe = currentPage * recipesPerPage;   \r\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\r\n  const currentRecipes = allRecipes.slice(indexOfFirstRecipe, indexOfLastRecipe);\r\n\r\n  const pagesDisplayLimit = 5;  // aca  limito la cantidad de botones de paginado que quiero mostrar\r\n  const [maxPageDisplay, setMaxPageDisplay] = useState(5);\r\n  const [minPageDisplay, setMinPageDisplay] = useState(1);\r\n\r\n  let lastpage = [];\r\n  for (let i = 1; i <= Math.ceil(allRecipes.length / recipesPerPage); i++) {  // la ultima pagina, esto lo uso de indice para mi nextSup\r\n  lastpage.push(i);    \r\n}\r\n  // use effects paginado\r\n\r\nuseEffect(\r\n  () => dispatch(setPagIndexes(indexOfLastRecipe, indexOfFirstRecipe)),\r\n  [indexOfLastRecipe, indexOfFirstRecipe, dispatch]);\r\n\r\nuseEffect(() => {\r\n  setCurrentPage(1);\r\n  setMaxPageDisplay(5);\r\n  setMinPageDisplay(1);\r\n}, [allRecipes]);\r\n \r\n//handlers de mi paginate\r\n\r\nconst handleSupPrev = () => {\r\n  if (currentPage !== 1) {\r\n    setCurrentPage(1);\r\n    setMaxPageDisplay(5);\r\n    setMinPageDisplay(1);\r\n  }\r\n};\r\n\r\nconst handlePrev = () => {\r\n  if (currentPage !== 1) {\r\n    setCurrentPage(currentPage - 1);\r\n    if (currentPage - 1 < minPageDisplay) {\r\n      setMaxPageDisplay(maxPageDisplay - pagesDisplayLimit < 5 ? 5 : maxPageDisplay - pagesDisplayLimit);\r\n      setMinPageDisplay(minPageDisplay - pagesDisplayLimit <= 0 ? 1 : minPageDisplay - pagesDisplayLimit);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst handleNext = () => {\r\n  if (currentPage !== lastpage.length) {\r\n    setCurrentPage(currentPage + 1);\r\n    if (currentPage + 1 > maxPageDisplay) {\r\n      setMaxPageDisplay(maxPageDisplay + pagesDisplayLimit);\r\n      setMinPageDisplay(minPageDisplay + pagesDisplayLimit);\r\n    }\r\n  }\r\n};\r\n\r\nconst handleSupNext = () => {\r\n  const lastPage = lastpage.length;\r\n  if (currentPage !== lastPage) {\r\n    setCurrentPage(lastPage);\r\n    setMaxPageDisplay(lastPage);\r\n    setMinPageDisplay(lastPage - pagesDisplayLimit + 1);\r\n  }\r\n};\r\n\r\n  \r\nfunction paginate(pageNumber) {  // seteo la pagina acorde al click en el boton\r\nsetCurrentPage(pageNumber);}\r\n\r\n\r\n//  manejo de orden de recetas\r\n const [/*orderName*/, setOrderName] = useState(\"\");\r\n const [/*orderLike*/, setOrderLike] = useState(\"\");\r\n const [/*cambio*/, setCambio] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n  dispatch(getRecipes());  // trae todas las recetas\r\n  setCambio(true);    \r\n  }, [dispatch]);\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getTypesOfDiet());  // trae los tipos  de  dieta\r\n  }, [dispatch]);\r\n\r\n \r\n  const clearErrors = () => {  // manejo de errores para la ventana modal\r\n    dispatch(clearError());\r\n}\r\n\r\n  function handleClick(e) {    \r\n    e.preventDefault();\r\n    \r\n    dispatch(getRecipes());\r\n  }\r\n\r\n  function handleSelectTypeOfDiet(e) {         \r\n    dispatch(filterByDiet(e.target.value));\r\n    \r\n    setCurrentPage(1)\r\n\r\n    setRefreshState((prevState) => !prevState);    \r\n  }\r\n\r\n  function handleSelectByName(e) {\r\n    e.preventDefault();\r\n    dispatch(orderByName(e.target.value));\r\n    setCurrentPage(1);\r\n    setOrderName(\"Order\" + e.target.value);\r\n  }\r\n\r\n\r\n  function handleSelectByScore(e) {\r\n    e.preventDefault();\r\n    dispatch(orderByScoreLikes(e.target.value));\r\n    setCurrentPage(1);\r\n    setOrderLike(\"Order\" + e.target.value);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"home\">\r\n      {allRecipes.length>0? \r\n\r\n\r\n      (<div className=\"home\">\r\n      <h1>pick one for me!!!<img src=\"https://i.ibb.co/WFBhFLb/Harsh-Stickers1.png\" alt=\"Harsh-Stickers1\" border=\"0\" /></h1>\r\n      \r\n      <SearchBar />\r\n      {error && <Modal show={true} setShow={clearErrors} message={\"No results were found\"} />}\r\n      \r\n      \r\n\r\n      <div className=\"showAll\">\r\n\r\n      <Link to=\"/recipe\" className=\"showAll\">\r\n        <button >Create your own recipe</button>\r\n      </Link>\r\n      \r\n\r\n        <button\r\n          onClick={(e) => {handleClick(e);}}>\r\n          Show all recipes                \r\n        </button>\r\n      </div>\r\n\r\n   \r\n      <div className=\"select\">\r\n\r\n\r\n        <span className=\"span\">Order by Recipe Name</span>\r\n        <select onChange={(n) => handleSelectByName(n)}>\r\n          <option value=\"default\">All</option>\r\n          <option value=\"A-Z\">A-Z</option>\r\n          <option value=\"Z-A\">Z-A</option>\r\n        </select>\r\n\r\n\r\n        <span className=\"span\">Order by Score</span>\r\n        <select onChange={(s) => handleSelectByScore(s)}>\r\n          <option value=\"All\">All</option>\r\n          <option value=\"Asc\">Highest Score</option>\r\n          <option value=\"Desc\">Lowest Score</option>\r\n        </select>\r\n\r\n\r\n        <span className=\"span\">Filter by Type of diet</span>\r\n        <select onChange={(e) => handleSelectTypeOfDiet(e)}>\r\n          <option value=\"default\">All Diets</option>\r\n\r\n          {diets.map((d) => (\r\n          <option value={d.name} key={d.id}>{d.name}</option>\r\n          ))}\r\n        </select>\r\n        </div>\r\n      <div className=\"paginate\">\r\n      <Paginates\r\n        paginate={paginate}\r\n        recipesPerPage={recipesPerPage}\r\n        allRecipes={allRecipes.length}\r\n        \r\n        handleNext={handleNext}\r\n        handleSupNext={handleSupNext}\r\n        handleSupPrev={handleSupPrev}\r\n        handlePrev={handlePrev}\r\n        maxPageDisplay={maxPageDisplay}\r\n        minPageDisplay={minPageDisplay}\r\n        currentPage={currentPage}\r\n        \r\n        />  \r\n      </div>\r\n      \r\n\r\n      \r\n\r\n\r\n\r\n      <div className=\"cards\">\r\n       \r\n      {currentRecipes?.map((c) => (\r\n         \r\n        \r\n          <div key={c.id}>             \r\n            <Link to={\"/home/\" + c.id} className=\"linkCard\">             \r\n              <Card               \r\n                title={c.title}\r\n                image={c.image \r\n                  ?(c.image) \r\n                  :(<img src=\"https://shorturl.ae/eEB8K\" alt=\"Img not provided\"/>)                  \r\n                 }   \r\n\r\n                diets={c.createdDb\r\n                    ? c.diets.map((d) => ( <p key={d.name} className=\"dietsMap\">{d.name}</p>))\r\n                    : c.diets.map((d) => ( <p key={d} className=\"dietsMap\">{d}</p>))\r\n                     }\r\n\r\n                vegetarian={\r\n                  c.vegetarian === true \r\n                  ? (<p className=\"dietsMap\">vegetarian</p>) \r\n                  :(<p>No veggie option aviable</p>)}\r\n                  score={c.aggregateLikes}\r\n              />              \r\n            </Link>            \r\n          </div>\r\n          ))}\r\n         \r\n          \r\n        </div>     \r\n    \r\n      <div className=\"paginate\">\r\n\r\n      <Paginates\r\n        paginate={paginate}\r\n        recipesPerPage={recipesPerPage}\r\n        allRecipes={allRecipes.length}        \r\n        handleNext={handleNext}\r\n        handleSupNext={handleSupNext}\r\n        handleSupPrev={handleSupPrev}\r\n        handlePrev={handlePrev}\r\n        maxPageDisplay={maxPageDisplay}\r\n        minPageDisplay={minPageDisplay}\r\n        currentPage={currentPage}\r\n        />  \r\n         </div>\r\n\r\n</div>) \r\n: <Loading />}\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}