{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ttige\\\\Desktop\\\\harsh\\\\client\\\\src\\\\components\\\\Paginate\\\\Paginate.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; //import { useState, useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./Paginate.css\"; //action \n//import {setPagIndexes} from \"../../actions/index\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Paginate(_ref) {\n  _s();\n\n  let {\n    recipesPerPage,\n    currentPage,\n    paginate,\n    handleNext,\n    handleSupNext,\n    handleSupPrev,\n    handlePrev,\n    maxPageDisplay,\n    minPageDisplay\n  } = _ref;\n  //const dispatch = useDispatch();\n  const allRecipes = useSelector(state => state.recipes.length); //const [currentPage, /*setCurrentPage*/] = useState(1);\n  //const recipesPerPage= 9;\n  //const indexOfLastRecipe = currentPage * recipesPerPage;   \n  //const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\n\n  const pageNumber = [];\n\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\n    pageNumber.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"btnPag\",\n    children: pageNumber.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSupPrev,\n        children: \"<<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrev,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), pageNumber === null || pageNumber === void 0 ? void 0 : pageNumber.map(number => {\n        if (number <= maxPageDisplay && number >= minPageDisplay) {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            id: number,\n            className: currentPage === number ? \"active\" : null,\n            onClick: () => paginate(number),\n            children: number\n          }, number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this);\n        } else {\n          return null;\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNext(currentPage),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSupNext,\n        children: \">>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Paginate, \"BtrQ/km5f+iMm32WvfRREwfej4w=\", false, function () {\n  return [useSelector];\n});\n\n_c = Paginate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["C:/Users/ttige/Desktop/harsh/client/src/components/Paginate/Paginate.jsx"],"names":["React","useDispatch","useSelector","Paginate","recipesPerPage","currentPage","paginate","handleNext","handleSupNext","handleSupPrev","handlePrev","maxPageDisplay","minPageDisplay","allRecipes","state","recipes","length","pageNumber","i","Math","ceil","push","map","number"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAO,gBAAP,C,CAEA;AACA;;;AAIA,eAAe,SAASC,QAAT,OAAmJ;AAAA;;AAAA,MAAjI;AAAGC,IAAAA,cAAH;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA,QAAhC;AAA0CC,IAAAA,UAA1C;AAAsDC,IAAAA,aAAtD;AAAqEC,IAAAA,aAArE;AAAoFC,IAAAA,UAApF;AAAgGC,IAAAA,cAAhG;AAAgHC,IAAAA;AAAhH,GAAiI;AAElK;AACA,QAAMC,UAAU,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,MAAxB,CAA9B,CAHkK,CAOlK;AACA;AAEA;AACA;;AASE,QAAMC,UAAU,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUP,UAAU,GAAGT,cAAvB,CAArB,EAA6Dc,CAAC,EAA9D,EAAkE;AAChED,IAAAA,UAAU,CAACI,IAAX,CAAgBH,CAAhB;AACD;;AAYD,sBAGA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cACKD,UAAU,CAACD,MAAX,KAAsB,CAAtB,gBACC;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,8BACE;AAAS,QAAA,OAAO,EAAEP,aAAlB;AAAA,kBAAkC;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEC,UAAjB;AAAA,kBAA8B;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF,EAGIO,UAHJ,aAGIA,UAHJ,uBAGIA,UAAU,CAAEK,GAAZ,CAAgBC,MAAM,IAAI;AAC1B,YAAIA,MAAM,IAAIZ,cAAV,IAA4BY,MAAM,IAAIX,cAA1C,EAA0D;AACxD,8BACE;AAEE,YAAA,EAAE,EAAEW,MAFN;AAGE,YAAA,SAAS,EAAElB,WAAW,KAAKkB,MAAhB,GAAyB,QAAzB,GAAoC,IAHjD;AAIE,YAAA,OAAO,EAAE,MAAMjB,QAAQ,CAACiB,MAAD,CAJzB;AAAA,sBAMGA;AANH,aACOA,MADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAXD,MAWO;AACL,iBAAO,IAAP;AACD;AACF,OAfC,CAHJ,eAmBE;AAAQ,QAAA,OAAO,EAAE,MAAKhB,UAAU,CAACF,WAAD,CAAhC;AAAA,kBAAgD;AAAhD;AAAA;AAAA;AAAA;AAAA,cAnBF,eAoBE;AAAQ,QAAA,OAAO,EAAEG,aAAjB;AAAA,kBAAiC;AAAjC;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,UAHA;AAgCD;;GAnEuBL,Q;UAGLD,W;;;KAHKC,Q","sourcesContent":["import React from \"react\";\r\n//import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport \"./Paginate.css\";\r\n\r\n//action \r\n//import {setPagIndexes} from \"../../actions/index\";\r\n\r\n\r\n\r\nexport default function Paginate({  recipesPerPage, currentPage, paginate, handleNext, handleSupNext, handleSupPrev, handlePrev, maxPageDisplay, minPageDisplay}) {\r\n\r\n//const dispatch = useDispatch();\r\nconst allRecipes = useSelector(state => state.recipes.length);\r\n\r\n \r\n\r\n//const [currentPage, /*setCurrentPage*/] = useState(1);\r\n//const recipesPerPage= 9;\r\n\r\n//const indexOfLastRecipe = currentPage * recipesPerPage;   \r\n//const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  const pageNumber = [];\r\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\r\n    pageNumber.push(i);\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n  return (\r\n \r\n\r\n  <nav className=\"btnPag\">\r\n      {pageNumber.length === 0 ? (\r\n        <p></p>\r\n      ) : (\r\n        <div>\r\n          <button  onClick={handleSupPrev}>{\"<<\"}</button>\r\n          <button onClick={handlePrev}>{\"<\"}</button>\r\n          { pageNumber?.map(number => {\r\n            if (number <= maxPageDisplay && number >= minPageDisplay) {\r\n              return (\r\n                <button\r\n                  key={number}\r\n                  id={number}\r\n                  className={currentPage === number ? \"active\" : null}\r\n                  onClick={() => paginate(number)}\r\n                >\r\n                  {number}\r\n                </button>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n          <button onClick={() =>handleNext(currentPage)}>{\">\"}</button>\r\n          <button onClick={handleSupNext}>{\">>\"}</button>\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}